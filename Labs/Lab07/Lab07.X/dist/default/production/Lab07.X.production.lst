

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Apr 18 22:57:58 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211                           
   212                           	psect	strings
   213  01C6                     __pstrings:
   214  01C6                     stringtab:
   215  01C6                     __stringtab:
   216  01C6                     stringcode:	
   217                           ;	String table - string pointers are 1 byte each
   218                           
   219  01C6                     stringdir:
   220  01C6  3001               	movlw	high stringdir
   221  01C7  008A               	movwf	10
   222  01C8  0804               	movf	4,w
   223  01C9  0A84               	incf	4,f
   224  01CA  0782               	addwf	2,f
   225  01CB                     __stringbase:
   226  01CB  3400               	retlw	0
   227  01CC                     __end_of__stringtab:
   228  01CC                     _tabla:
   229  01CC  343F               	retlw	63
   230  01CD  3406               	retlw	6
   231  01CE  345B               	retlw	91
   232  01CF  344F               	retlw	79
   233  01D0  3466               	retlw	102
   234  01D1  346D               	retlw	109
   235  01D2  347D               	retlw	125
   236  01D3  3407               	retlw	7
   237  01D4  347F               	retlw	127
   238  01D5  346F               	retlw	111
   239  01D6                     __end_of_tabla:
   240                           
   241                           	psect	nvCOMMON
   242  0075                     __pnvCOMMON:
   243  0075                     _dig:
   244  0075                     	ds	2
   245  0077                     _cen:
   246  0077                     	ds	1
   247                           
   248                           	psect	nvBANK0
   249  0033                     __pnvBANK0:
   250  0033                     _uni:
   251  0033                     	ds	1
   252  0034                     _dec:
   253  0034                     	ds	1
   254  0007                     _PORTC	set	7
   255  0005                     _PORTA	set	5
   256  0001                     _TMR0	set	1
   257  000B                     _INTCONbits	set	11
   258  0008                     _PORTD	set	8
   259  0006                     _PORTBbits	set	6
   260  005A                     _T0IF	set	90
   261  0058                     _RBIF	set	88
   262  0096                     _IOCBbits	set	150
   263  0095                     _WPUBbits	set	149
   264  0081                     _OPTION_REGbits	set	129
   265  008F                     _OSCCONbits	set	143
   266  0088                     _TRISD	set	136
   267  0087                     _TRISC	set	135
   268  0085                     _TRISA	set	133
   269  0086                     _TRISB	set	134
   270  0189                     _ANSELH	set	393
   271  0188                     _ANSEL	set	392
   272                           
   273                           	psect	cinit
   274  0015                     start_initialization:	
   275                           ; #config settings
   276                           
   277  0015                     __initialization:
   278                           
   279                           ; Clear objects allocated to COMMON
   280  0015  01F8               	clrf	__pbssCOMMON& (0+127)
   281  0016  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   282  0017                     end_of_initialization:	
   283                           ;End of C runtime variable initialization code
   284                           
   285  0017                     __end_of__initialization:
   286  0017  0183               	clrf	3
   287  0018  120A  118A  281B   	ljmp	_main	;jump to C main() function
   288                           
   289                           	psect	bssCOMMON
   290  0078                     __pbssCOMMON:
   291  0078                     _segm:
   292  0078                     	ds	2
   293                           
   294                           	psect	cstackCOMMON
   295  0070                     __pcstackCOMMON:
   296  0070                     ?_setup:
   297  0070                     ?_isr:	
   298                           ; 1 bytes @ 0x0
   299                           
   300  0070                     ??_isr:	
   301                           ; 1 bytes @ 0x0
   302                           
   303  0070                     ?_main:	
   304                           ; 1 bytes @ 0x0
   305                           
   306                           
   307                           ; 1 bytes @ 0x0
   308  0070                     	ds	5
   309                           
   310                           	psect	cstackBANK0
   311  0020                     __pcstackBANK0:
   312  0020                     ??_setup:
   313  0020                     ?___bmul:	
   314                           ; 1 bytes @ 0x0
   315                           
   316  0020                     ?___wmul:	
   317                           ; 1 bytes @ 0x0
   318                           
   319  0020                     ___bmul@multiplicand:	
   320                           ; 2 bytes @ 0x0
   321                           
   322  0020                     ___wmul@multiplier:	
   323                           ; 1 bytes @ 0x0
   324                           
   325                           
   326                           ; 2 bytes @ 0x0
   327  0020                     	ds	1
   328  0021                     ??___bmul:
   329                           
   330                           ; 1 bytes @ 0x1
   331  0021                     	ds	1
   332  0022                     ___bmul@product:
   333  0022                     ___wmul@multiplicand:	
   334                           ; 1 bytes @ 0x2
   335                           
   336                           
   337                           ; 2 bytes @ 0x2
   338  0022                     	ds	1
   339  0023                     ___bmul@multiplier:
   340                           
   341                           ; 1 bytes @ 0x3
   342  0023                     	ds	1
   343  0024                     ??___wmul:
   344  0024                     ___wmul@product:	
   345                           ; 1 bytes @ 0x4
   346                           
   347                           
   348                           ; 2 bytes @ 0x4
   349  0024                     	ds	2
   350  0026                     ?___awdiv:
   351  0026                     ___awdiv@divisor:	
   352                           ; 2 bytes @ 0x6
   353                           
   354                           
   355                           ; 2 bytes @ 0x6
   356  0026                     	ds	2
   357  0028                     ___awdiv@dividend:
   358                           
   359                           ; 2 bytes @ 0x8
   360  0028                     	ds	2
   361  002A                     ??___awdiv:
   362                           
   363                           ; 1 bytes @ 0xA
   364  002A                     	ds	1
   365  002B                     ___awdiv@counter:
   366                           
   367                           ; 1 bytes @ 0xB
   368  002B                     	ds	1
   369  002C                     ___awdiv@sign:
   370                           
   371                           ; 1 bytes @ 0xC
   372  002C                     	ds	1
   373  002D                     ___awdiv@quotient:
   374                           
   375                           ; 2 bytes @ 0xD
   376  002D                     	ds	2
   377  002F                     ??_main:
   378                           
   379                           ; 1 bytes @ 0xF
   380  002F                     	ds	4
   381                           
   382                           	psect	maintext
   383  001B                     __pmaintext:	
   384 ;;
   385 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   386 ;;
   387 ;; *************** function _main *****************
   388 ;; Defined at:
   389 ;;		line 106 in file "Lab07.c"
   390 ;; Parameters:    Size  Location     Type
   391 ;;		None
   392 ;; Auto vars:     Size  Location     Type
   393 ;;		None
   394 ;; Return value:  Size  Location     Type
   395 ;;                  1    wreg      void 
   396 ;; Registers used:
   397 ;;		wreg, status,2, status,0, pclath, cstack
   398 ;; Tracked objects:
   399 ;;		On entry : B00/0
   400 ;;		On exit  : 0/0
   401 ;;		Unchanged: 0/0
   402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   403 ;;      Params:         0       0       0       0       0
   404 ;;      Locals:         0       0       0       0       0
   405 ;;      Temps:          0       4       0       0       0
   406 ;;      Totals:         0       4       0       0       0
   407 ;;Total ram usage:        4 bytes
   408 ;; Hardware stack levels required when called:    3
   409 ;; This function calls:
   410 ;;		___awdiv
   411 ;;		___bmul
   412 ;;		___wmul
   413 ;;		_setup
   414 ;; This function is called by:
   415 ;;		Startup code after reset
   416 ;; This function uses a non-reentrant model
   417 ;;
   418                           
   419                           
   420                           ;psect for function _main
   421  001B                     _main:
   422  001B                     l1131:	
   423                           ;incstack = 0
   424                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   425                           
   426                           
   427                           ;Lab07.c: 108:     setup();
   428  001B  120A  118A  215C  120A  118A  	fcall	_setup
   429  0020                     l1133:
   430                           
   431                           ;Lab07.c: 110:     dec = 0;
   432  0020  1283               	bcf	3,5	;RP0=0, select bank0
   433  0021  1303               	bcf	3,6	;RP1=0, select bank0
   434  0022  01B4               	clrf	_dec
   435  0023                     l1135:
   436                           
   437                           ;Lab07.c: 111:     cen = 0;
   438  0023  01F7               	clrf	_cen
   439  0024                     l1137:
   440                           
   441                           ;Lab07.c: 112:     uni = 0;
   442  0024  01B3               	clrf	_uni
   443  0025                     l1139:
   444                           
   445                           ;Lab07.c: 113:     dig = 0;
   446  0025  01F5               	clrf	_dig
   447  0026  01F6               	clrf	_dig+1
   448  0027                     l1141:
   449                           
   450                           ;Lab07.c: 116:         dig = PORTD;
   451  0027  0808               	movf	8,w	;volatile
   452  0028  00AF               	movwf	??_main
   453  0029  01B0               	clrf	??_main+1
   454  002A  082F               	movf	??_main,w
   455  002B  00F5               	movwf	_dig
   456  002C  0830               	movf	??_main+1,w
   457  002D  00F6               	movwf	_dig+1
   458  002E                     l1143:
   459                           
   460                           ;Lab07.c: 117:         cen = dig/100;
   461  002E  3064               	movlw	100
   462  002F  00A6               	movwf	___awdiv@divisor
   463  0030  3000               	movlw	0
   464  0031  00A7               	movwf	___awdiv@divisor+1
   465  0032  0876               	movf	_dig+1,w
   466  0033  00A9               	movwf	___awdiv@dividend+1
   467  0034  0875               	movf	_dig,w
   468  0035  00A8               	movwf	___awdiv@dividend
   469  0036  120A  118A  208C  120A  118A  	fcall	___awdiv
   470  003B  1283               	bcf	3,5	;RP0=0, select bank0
   471  003C  1303               	bcf	3,6	;RP1=0, select bank0
   472  003D  0826               	movf	?___awdiv,w
   473  003E  00AF               	movwf	??_main
   474  003F  082F               	movf	??_main,w
   475  0040  00F7               	movwf	_cen
   476  0041                     l1145:
   477                           
   478                           ;Lab07.c: 118:         dec = (dig - (100* cen))/10;
   479  0041  300A               	movlw	10
   480  0042  00A6               	movwf	___awdiv@divisor
   481  0043  3000               	movlw	0
   482  0044  00A7               	movwf	___awdiv@divisor+1
   483  0045  0877               	movf	_cen,w
   484  0046  00AF               	movwf	??_main
   485  0047  01B0               	clrf	??_main+1
   486  0048  082F               	movf	??_main,w
   487  0049  00A0               	movwf	___wmul@multiplier
   488  004A  0830               	movf	??_main+1,w
   489  004B  00A1               	movwf	___wmul@multiplier+1
   490  004C  309C               	movlw	156
   491  004D  00A2               	movwf	___wmul@multiplicand
   492  004E  30FF               	movlw	255
   493  004F  00A3               	movwf	___wmul@multiplicand+1
   494  0050  120A  118A  2188  120A  118A  	fcall	___wmul
   495  0055  0875               	movf	_dig,w
   496  0056  1283               	bcf	3,5	;RP0=0, select bank0
   497  0057  1303               	bcf	3,6	;RP1=0, select bank0
   498  0058  0720               	addwf	?___wmul,w
   499  0059  00A8               	movwf	___awdiv@dividend
   500  005A  0876               	movf	_dig+1,w
   501  005B  1803               	skipnc
   502  005C  0A76               	incf	_dig+1,w
   503  005D  0721               	addwf	?___wmul+1,w
   504  005E  00A9               	movwf	___awdiv@dividend+1
   505  005F  120A  118A  208C  120A  118A  	fcall	___awdiv
   506  0064  1283               	bcf	3,5	;RP0=0, select bank0
   507  0065  1303               	bcf	3,6	;RP1=0, select bank0
   508  0066  0826               	movf	?___awdiv,w
   509  0067  00B1               	movwf	??_main+2
   510  0068  0831               	movf	??_main+2,w
   511  0069  00B4               	movwf	_dec
   512  006A                     l1147:
   513                           
   514                           ;Lab07.c: 119:         uni = dig - (100* cen) - (10*dec);
   515  006A  309C               	movlw	156
   516  006B  00AF               	movwf	??_main
   517  006C  082F               	movf	??_main,w
   518  006D  00A0               	movwf	___bmul@multiplicand
   519  006E  0877               	movf	_cen,w
   520  006F  120A  118A  21AF  120A  118A  	fcall	___bmul
   521  0074  1283               	bcf	3,5	;RP0=0, select bank0
   522  0075  1303               	bcf	3,6	;RP1=0, select bank0
   523  0076  00B0               	movwf	??_main+1
   524  0077  30F6               	movlw	246
   525  0078  00B1               	movwf	??_main+2
   526  0079  0831               	movf	??_main+2,w
   527  007A  00A0               	movwf	___bmul@multiplicand
   528  007B  0834               	movf	_dec,w
   529  007C  120A  118A  21AF  120A  118A  	fcall	___bmul
   530  0081  1283               	bcf	3,5	;RP0=0, select bank0
   531  0082  1303               	bcf	3,6	;RP1=0, select bank0
   532  0083  0730               	addwf	??_main+1,w
   533  0084  0775               	addwf	_dig,w
   534  0085  00B2               	movwf	??_main+3
   535  0086  0832               	movf	??_main+3,w
   536  0087  00B3               	movwf	_uni
   537  0088  2827               	goto	l1141
   538  0089  120A  118A  2812   	ljmp	start
   539  008C                     __end_of_main:
   540                           
   541                           	psect	text1
   542  015C                     __ptext1:	
   543 ;; *************** function _setup *****************
   544 ;; Defined at:
   545 ;;		line 126 in file "Lab07.c"
   546 ;; Parameters:    Size  Location     Type
   547 ;;		None
   548 ;; Auto vars:     Size  Location     Type
   549 ;;		None
   550 ;; Return value:  Size  Location     Type
   551 ;;                  1    wreg      void 
   552 ;; Registers used:
   553 ;;		wreg, status,2
   554 ;; Tracked objects:
   555 ;;		On entry : 0/0
   556 ;;		On exit  : 0/0
   557 ;;		Unchanged: 0/0
   558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   559 ;;      Params:         0       0       0       0       0
   560 ;;      Locals:         0       0       0       0       0
   561 ;;      Temps:          0       0       0       0       0
   562 ;;      Totals:         0       0       0       0       0
   563 ;;Total ram usage:        0 bytes
   564 ;; Hardware stack levels used:    1
   565 ;; Hardware stack levels required when called:    2
   566 ;; This function calls:
   567 ;;		Nothing
   568 ;; This function is called by:
   569 ;;		_main
   570 ;; This function uses a non-reentrant model
   571 ;;
   572                           
   573                           
   574                           ;psect for function _setup
   575  015C                     _setup:
   576  015C                     l1047:	
   577                           ;incstack = 0
   578                           ; Regs used in _setup: [wreg+status,2]
   579                           
   580                           
   581                           ;Lab07.c: 129:     ANSEL = 0x00;
   582  015C  1683               	bsf	3,5	;RP0=1, select bank3
   583  015D  1703               	bsf	3,6	;RP1=1, select bank3
   584  015E  0188               	clrf	8	;volatile
   585                           
   586                           ;Lab07.c: 130:     ANSELH = 0x00;
   587  015F  0189               	clrf	9	;volatile
   588  0160                     l1049:
   589                           
   590                           ;Lab07.c: 133:     TRISB = 0xFF;
   591  0160  30FF               	movlw	255
   592  0161  1683               	bsf	3,5	;RP0=1, select bank1
   593  0162  1303               	bcf	3,6	;RP1=0, select bank1
   594  0163  0086               	movwf	6	;volatile
   595  0164                     l1051:
   596                           
   597                           ;Lab07.c: 134:     TRISA = 0x00;
   598  0164  0185               	clrf	5	;volatile
   599  0165                     l1053:
   600                           
   601                           ;Lab07.c: 135:     TRISC = 0x00;
   602  0165  0187               	clrf	7	;volatile
   603  0166                     l1055:
   604                           
   605                           ;Lab07.c: 136:     TRISD = 0x00;
   606  0166  0188               	clrf	8	;volatile
   607  0167                     l1057:
   608                           
   609                           ;Lab07.c: 139:     PORTA = 0x00;
   610  0167  1283               	bcf	3,5	;RP0=0, select bank0
   611  0168  1303               	bcf	3,6	;RP1=0, select bank0
   612  0169  0185               	clrf	5	;volatile
   613  016A                     l1059:
   614                           
   615                           ;Lab07.c: 140:     PORTC = 0x00;
   616  016A  0187               	clrf	7	;volatile
   617  016B                     l1061:
   618                           
   619                           ;Lab07.c: 141:     PORTD = 0x00;
   620  016B  0188               	clrf	8	;volatile
   621  016C                     l1063:
   622                           
   623                           ;Lab07.c: 145:     OSCCONbits.IRCF2 = 1;
   624  016C  1683               	bsf	3,5	;RP0=1, select bank1
   625  016D  1303               	bcf	3,6	;RP1=0, select bank1
   626  016E  170F               	bsf	15,6	;volatile
   627  016F                     l1065:
   628                           
   629                           ;Lab07.c: 146:     OSCCONbits.IRCF1 = 1;
   630  016F  168F               	bsf	15,5	;volatile
   631  0170                     l1067:
   632                           
   633                           ;Lab07.c: 147:     OSCCONbits.IRCF0 = 0;
   634  0170  120F               	bcf	15,4	;volatile
   635  0171                     l1069:
   636                           
   637                           ;Lab07.c: 148:     OSCCONbits.SCS = 1;
   638  0171  140F               	bsf	15,0	;volatile
   639  0172                     l1071:
   640                           
   641                           ;Lab07.c: 151:     OPTION_REGbits.T0CS = 0;
   642  0172  1281               	bcf	1,5	;volatile
   643  0173                     l1073:
   644                           
   645                           ;Lab07.c: 152:     OPTION_REGbits.PSA = 0;
   646  0173  1181               	bcf	1,3	;volatile
   647  0174                     l1075:
   648                           
   649                           ;Lab07.c: 153:     OPTION_REGbits.PS2 = 1;
   650  0174  1501               	bsf	1,2	;volatile
   651  0175                     l1077:
   652                           
   653                           ;Lab07.c: 154:     OPTION_REGbits.PS1 = 1;
   654  0175  1481               	bsf	1,1	;volatile
   655  0176                     l1079:
   656                           
   657                           ;Lab07.c: 155:     OPTION_REGbits.PS0 = 0;
   658  0176  1001               	bcf	1,0	;volatile
   659  0177                     l1081:
   660                           
   661                           ;Lab07.c: 156:     TMR0 = 247;
   662  0177  30F7               	movlw	247
   663  0178  1283               	bcf	3,5	;RP0=0, select bank0
   664  0179  1303               	bcf	3,6	;RP1=0, select bank0
   665  017A  0081               	movwf	1	;volatile
   666  017B                     l1083:
   667                           
   668                           ;Lab07.c: 159:     OPTION_REGbits.nRBPU = 0;
   669  017B  1683               	bsf	3,5	;RP0=1, select bank1
   670  017C  1303               	bcf	3,6	;RP1=0, select bank1
   671  017D  1381               	bcf	1,7	;volatile
   672  017E                     l1085:
   673                           
   674                           ;Lab07.c: 160:     WPUBbits.WPUB0 = 1;
   675  017E  1415               	bsf	21,0	;volatile
   676  017F                     l1087:
   677                           
   678                           ;Lab07.c: 161:     WPUBbits.WPUB1 = 1;
   679  017F  1495               	bsf	21,1	;volatile
   680  0180                     l1089:
   681                           
   682                           ;Lab07.c: 162:     IOCBbits.IOCB0 = 1;
   683  0180  1416               	bsf	22,0	;volatile
   684  0181                     l1091:
   685                           
   686                           ;Lab07.c: 163:     IOCBbits.IOCB1 = 1;
   687  0181  1496               	bsf	22,1	;volatile
   688  0182                     l1093:
   689                           
   690                           ;Lab07.c: 166:     INTCONbits.GIE = 1;
   691  0182  178B               	bsf	11,7	;volatile
   692  0183                     l1095:
   693                           
   694                           ;Lab07.c: 167:     INTCONbits.T0IE = 1;
   695  0183  168B               	bsf	11,5	;volatile
   696  0184                     l1097:
   697                           
   698                           ;Lab07.c: 168:     INTCONbits.T0IF = 0;
   699  0184  110B               	bcf	11,2	;volatile
   700  0185                     l1099:
   701                           
   702                           ;Lab07.c: 169:     INTCONbits.RBIE = 1;
   703  0185  158B               	bsf	11,3	;volatile
   704  0186                     l1101:
   705                           
   706                           ;Lab07.c: 170:     INTCONbits.RBIF = 0;
   707  0186  100B               	bcf	11,0	;volatile
   708  0187                     l75:
   709  0187  0008               	return
   710  0188                     __end_of_setup:
   711                           
   712                           	psect	text2
   713  0188                     __ptext2:	
   714 ;; *************** function ___wmul *****************
   715 ;; Defined at:
   716 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
   717 ;; Parameters:    Size  Location     Type
   718 ;;  multiplier      2    0[BANK0 ] unsigned int 
   719 ;;  multiplicand    2    2[BANK0 ] unsigned int 
   720 ;; Auto vars:     Size  Location     Type
   721 ;;  product         2    4[BANK0 ] unsigned int 
   722 ;; Return value:  Size  Location     Type
   723 ;;                  2    0[BANK0 ] unsigned int 
   724 ;; Registers used:
   725 ;;		wreg, status,2, status,0
   726 ;; Tracked objects:
   727 ;;		On entry : 0/0
   728 ;;		On exit  : 0/0
   729 ;;		Unchanged: 0/0
   730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   731 ;;      Params:         0       4       0       0       0
   732 ;;      Locals:         0       2       0       0       0
   733 ;;      Temps:          0       0       0       0       0
   734 ;;      Totals:         0       6       0       0       0
   735 ;;Total ram usage:        6 bytes
   736 ;; Hardware stack levels used:    1
   737 ;; Hardware stack levels required when called:    2
   738 ;; This function calls:
   739 ;;		Nothing
   740 ;; This function is called by:
   741 ;;		_main
   742 ;; This function uses a non-reentrant model
   743 ;;
   744                           
   745                           
   746                           ;psect for function ___wmul
   747  0188                     ___wmul:
   748  0188                     l1103:	
   749                           ;incstack = 0
   750                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   751                           
   752  0188  1283               	bcf	3,5	;RP0=0, select bank0
   753  0189  1303               	bcf	3,6	;RP1=0, select bank0
   754  018A  01A4               	clrf	___wmul@product
   755  018B  01A5               	clrf	___wmul@product+1
   756  018C                     l1105:
   757  018C  1C20               	btfss	___wmul@multiplier,0
   758  018D  298F               	goto	u471
   759  018E  2990               	goto	u470
   760  018F                     u471:
   761  018F  2996               	goto	l161
   762  0190                     u470:
   763  0190                     l1107:
   764  0190  0822               	movf	___wmul@multiplicand,w
   765  0191  07A4               	addwf	___wmul@product,f
   766  0192  1803               	skipnc
   767  0193  0AA5               	incf	___wmul@product+1,f
   768  0194  0823               	movf	___wmul@multiplicand+1,w
   769  0195  07A5               	addwf	___wmul@product+1,f
   770  0196                     l161:
   771  0196  3001               	movlw	1
   772  0197                     u485:
   773  0197  1003               	clrc
   774  0198  0DA2               	rlf	___wmul@multiplicand,f
   775  0199  0DA3               	rlf	___wmul@multiplicand+1,f
   776  019A  3EFF               	addlw	-1
   777  019B  1D03               	skipz
   778  019C  2997               	goto	u485
   779  019D                     l1109:
   780  019D  3001               	movlw	1
   781  019E                     u495:
   782  019E  1003               	clrc
   783  019F  0CA1               	rrf	___wmul@multiplier+1,f
   784  01A0  0CA0               	rrf	___wmul@multiplier,f
   785  01A1  3EFF               	addlw	-1
   786  01A2  1D03               	skipz
   787  01A3  299E               	goto	u495
   788  01A4                     l1111:
   789  01A4  0820               	movf	___wmul@multiplier,w
   790  01A5  0421               	iorwf	___wmul@multiplier+1,w
   791  01A6  1D03               	btfss	3,2
   792  01A7  29A9               	goto	u501
   793  01A8  29AA               	goto	u500
   794  01A9                     u501:
   795  01A9  298C               	goto	l1105
   796  01AA                     u500:
   797  01AA                     l1113:
   798  01AA  0825               	movf	___wmul@product+1,w
   799  01AB  00A1               	movwf	?___wmul+1
   800  01AC  0824               	movf	___wmul@product,w
   801  01AD  00A0               	movwf	?___wmul
   802  01AE                     l163:
   803  01AE  0008               	return
   804  01AF                     __end_of___wmul:
   805                           
   806                           	psect	text3
   807  01AF                     __ptext3:	
   808 ;; *************** function ___bmul *****************
   809 ;; Defined at:
   810 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
   811 ;; Parameters:    Size  Location     Type
   812 ;;  multiplier      1    wreg     unsigned char 
   813 ;;  multiplicand    1    0[BANK0 ] unsigned char 
   814 ;; Auto vars:     Size  Location     Type
   815 ;;  multiplier      1    3[BANK0 ] unsigned char 
   816 ;;  product         1    2[BANK0 ] unsigned char 
   817 ;; Return value:  Size  Location     Type
   818 ;;                  1    wreg      unsigned char 
   819 ;; Registers used:
   820 ;;		wreg, status,2, status,0
   821 ;; Tracked objects:
   822 ;;		On entry : 0/0
   823 ;;		On exit  : 0/0
   824 ;;		Unchanged: 0/0
   825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   826 ;;      Params:         0       1       0       0       0
   827 ;;      Locals:         0       2       0       0       0
   828 ;;      Temps:          0       1       0       0       0
   829 ;;      Totals:         0       4       0       0       0
   830 ;;Total ram usage:        4 bytes
   831 ;; Hardware stack levels used:    1
   832 ;; Hardware stack levels required when called:    2
   833 ;; This function calls:
   834 ;;		Nothing
   835 ;; This function is called by:
   836 ;;		_main
   837 ;; This function uses a non-reentrant model
   838 ;;
   839                           
   840                           
   841                           ;psect for function ___bmul
   842  01AF                     ___bmul:
   843                           
   844                           ;incstack = 0
   845                           ; Regs used in ___bmul: [wreg+status,2+status,0]
   846                           ;___bmul@multiplier stored from wreg
   847  01AF  1283               	bcf	3,5	;RP0=0, select bank0
   848  01B0  1303               	bcf	3,6	;RP1=0, select bank0
   849  01B1  00A3               	movwf	___bmul@multiplier
   850  01B2                     l1117:
   851  01B2  01A2               	clrf	___bmul@product
   852  01B3                     l1119:
   853  01B3  1C23               	btfss	___bmul@multiplier,0
   854  01B4  29B6               	goto	u511
   855  01B5  29B7               	goto	u510
   856  01B6                     u511:
   857  01B6  29BB               	goto	l1123
   858  01B7                     u510:
   859  01B7                     l1121:
   860  01B7  0820               	movf	___bmul@multiplicand,w
   861  01B8  00A1               	movwf	??___bmul
   862  01B9  0821               	movf	??___bmul,w
   863  01BA  07A2               	addwf	___bmul@product,f
   864  01BB                     l1123:
   865  01BB  1003               	clrc
   866  01BC  0DA0               	rlf	___bmul@multiplicand,f
   867  01BD                     l1125:
   868  01BD  1003               	clrc
   869  01BE  0CA3               	rrf	___bmul@multiplier,f
   870  01BF  0823               	movf	___bmul@multiplier,w
   871  01C0  1D03               	btfss	3,2
   872  01C1  29C3               	goto	u521
   873  01C2  29C4               	goto	u520
   874  01C3                     u521:
   875  01C3  29B3               	goto	l1119
   876  01C4                     u520:
   877  01C4                     l1127:
   878  01C4  0822               	movf	___bmul@product,w
   879  01C5                     l187:
   880  01C5  0008               	return
   881  01C6                     __end_of___bmul:
   882                           
   883                           	psect	text4
   884  008C                     __ptext4:	
   885 ;; *************** function ___awdiv *****************
   886 ;; Defined at:
   887 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
   888 ;; Parameters:    Size  Location     Type
   889 ;;  divisor         2    6[BANK0 ] int 
   890 ;;  dividend        2    8[BANK0 ] int 
   891 ;; Auto vars:     Size  Location     Type
   892 ;;  quotient        2   13[BANK0 ] int 
   893 ;;  sign            1   12[BANK0 ] unsigned char 
   894 ;;  counter         1   11[BANK0 ] unsigned char 
   895 ;; Return value:  Size  Location     Type
   896 ;;                  2    6[BANK0 ] int 
   897 ;; Registers used:
   898 ;;		wreg, status,2, status,0
   899 ;; Tracked objects:
   900 ;;		On entry : 0/0
   901 ;;		On exit  : 0/0
   902 ;;		Unchanged: 0/0
   903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   904 ;;      Params:         0       4       0       0       0
   905 ;;      Locals:         0       4       0       0       0
   906 ;;      Temps:          0       1       0       0       0
   907 ;;      Totals:         0       9       0       0       0
   908 ;;Total ram usage:        9 bytes
   909 ;; Hardware stack levels used:    1
   910 ;; Hardware stack levels required when called:    2
   911 ;; This function calls:
   912 ;;		Nothing
   913 ;; This function is called by:
   914 ;;		_main
   915 ;; This function uses a non-reentrant model
   916 ;;
   917                           
   918                           
   919                           ;psect for function ___awdiv
   920  008C                     ___awdiv:
   921  008C                     l941:	
   922                           ;incstack = 0
   923                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   924                           
   925  008C  1283               	bcf	3,5	;RP0=0, select bank0
   926  008D  1303               	bcf	3,6	;RP1=0, select bank0
   927  008E  01AC               	clrf	___awdiv@sign
   928  008F                     l943:
   929  008F  1FA7               	btfss	___awdiv@divisor+1,7
   930  0090  2892               	goto	u301
   931  0091  2893               	goto	u300
   932  0092                     u301:
   933  0092  289A               	goto	l949
   934  0093                     u300:
   935  0093                     l945:
   936  0093  09A6               	comf	___awdiv@divisor,f
   937  0094  09A7               	comf	___awdiv@divisor+1,f
   938  0095  0AA6               	incf	___awdiv@divisor,f
   939  0096  1903               	skipnz
   940  0097  0AA7               	incf	___awdiv@divisor+1,f
   941  0098                     l947:
   942  0098  01AC               	clrf	___awdiv@sign
   943  0099  0AAC               	incf	___awdiv@sign,f
   944  009A                     l949:
   945  009A  1FA9               	btfss	___awdiv@dividend+1,7
   946  009B  289D               	goto	u311
   947  009C  289E               	goto	u310
   948  009D                     u311:
   949  009D  28A7               	goto	l955
   950  009E                     u310:
   951  009E                     l951:
   952  009E  09A8               	comf	___awdiv@dividend,f
   953  009F  09A9               	comf	___awdiv@dividend+1,f
   954  00A0  0AA8               	incf	___awdiv@dividend,f
   955  00A1  1903               	skipnz
   956  00A2  0AA9               	incf	___awdiv@dividend+1,f
   957  00A3                     l953:
   958  00A3  3001               	movlw	1
   959  00A4  00AA               	movwf	??___awdiv
   960  00A5  082A               	movf	??___awdiv,w
   961  00A6  06AC               	xorwf	___awdiv@sign,f
   962  00A7                     l955:
   963  00A7  01AD               	clrf	___awdiv@quotient
   964  00A8  01AE               	clrf	___awdiv@quotient+1
   965  00A9                     l957:
   966  00A9  0826               	movf	___awdiv@divisor,w
   967  00AA  0427               	iorwf	___awdiv@divisor+1,w
   968  00AB  1903               	btfsc	3,2
   969  00AC  28AE               	goto	u321
   970  00AD  28AF               	goto	u320
   971  00AE                     u321:
   972  00AE  28E6               	goto	l977
   973  00AF                     u320:
   974  00AF                     l959:
   975  00AF  01AB               	clrf	___awdiv@counter
   976  00B0  0AAB               	incf	___awdiv@counter,f
   977  00B1  28BD               	goto	l965
   978  00B2                     l961:
   979  00B2  3001               	movlw	1
   980  00B3                     u335:
   981  00B3  1003               	clrc
   982  00B4  0DA6               	rlf	___awdiv@divisor,f
   983  00B5  0DA7               	rlf	___awdiv@divisor+1,f
   984  00B6  3EFF               	addlw	-1
   985  00B7  1D03               	skipz
   986  00B8  28B3               	goto	u335
   987  00B9                     l963:
   988  00B9  3001               	movlw	1
   989  00BA  00AA               	movwf	??___awdiv
   990  00BB  082A               	movf	??___awdiv,w
   991  00BC  07AB               	addwf	___awdiv@counter,f
   992  00BD                     l965:
   993  00BD  1FA7               	btfss	___awdiv@divisor+1,7
   994  00BE  28C0               	goto	u341
   995  00BF  28C1               	goto	u340
   996  00C0                     u341:
   997  00C0  28B2               	goto	l961
   998  00C1                     u340:
   999  00C1                     l967:
  1000  00C1  3001               	movlw	1
  1001  00C2                     u355:
  1002  00C2  1003               	clrc
  1003  00C3  0DAD               	rlf	___awdiv@quotient,f
  1004  00C4  0DAE               	rlf	___awdiv@quotient+1,f
  1005  00C5  3EFF               	addlw	-1
  1006  00C6  1D03               	skipz
  1007  00C7  28C2               	goto	u355
  1008  00C8  0827               	movf	___awdiv@divisor+1,w
  1009  00C9  0229               	subwf	___awdiv@dividend+1,w
  1010  00CA  1D03               	skipz
  1011  00CB  28CE               	goto	u365
  1012  00CC  0826               	movf	___awdiv@divisor,w
  1013  00CD  0228               	subwf	___awdiv@dividend,w
  1014  00CE                     u365:
  1015  00CE  1C03               	skipc
  1016  00CF  28D1               	goto	u361
  1017  00D0  28D2               	goto	u360
  1018  00D1                     u361:
  1019  00D1  28D9               	goto	l973
  1020  00D2                     u360:
  1021  00D2                     l969:
  1022  00D2  0826               	movf	___awdiv@divisor,w
  1023  00D3  02A8               	subwf	___awdiv@dividend,f
  1024  00D4  0827               	movf	___awdiv@divisor+1,w
  1025  00D5  1C03               	skipc
  1026  00D6  03A9               	decf	___awdiv@dividend+1,f
  1027  00D7  02A9               	subwf	___awdiv@dividend+1,f
  1028  00D8                     l971:
  1029  00D8  142D               	bsf	___awdiv@quotient,0
  1030  00D9                     l973:
  1031  00D9  3001               	movlw	1
  1032  00DA                     u375:
  1033  00DA  1003               	clrc
  1034  00DB  0CA7               	rrf	___awdiv@divisor+1,f
  1035  00DC  0CA6               	rrf	___awdiv@divisor,f
  1036  00DD  3EFF               	addlw	-1
  1037  00DE  1D03               	skipz
  1038  00DF  28DA               	goto	u375
  1039  00E0                     l975:
  1040  00E0  3001               	movlw	1
  1041  00E1  02AB               	subwf	___awdiv@counter,f
  1042  00E2  1D03               	btfss	3,2
  1043  00E3  28E5               	goto	u381
  1044  00E4  28E6               	goto	u380
  1045  00E5                     u381:
  1046  00E5  28C1               	goto	l967
  1047  00E6                     u380:
  1048  00E6                     l977:
  1049  00E6  082C               	movf	___awdiv@sign,w
  1050  00E7  1903               	btfsc	3,2
  1051  00E8  28EA               	goto	u391
  1052  00E9  28EB               	goto	u390
  1053  00EA                     u391:
  1054  00EA  28F0               	goto	l981
  1055  00EB                     u390:
  1056  00EB                     l979:
  1057  00EB  09AD               	comf	___awdiv@quotient,f
  1058  00EC  09AE               	comf	___awdiv@quotient+1,f
  1059  00ED  0AAD               	incf	___awdiv@quotient,f
  1060  00EE  1903               	skipnz
  1061  00EF  0AAE               	incf	___awdiv@quotient+1,f
  1062  00F0                     l981:
  1063  00F0  082E               	movf	___awdiv@quotient+1,w
  1064  00F1  00A7               	movwf	?___awdiv+1
  1065  00F2  082D               	movf	___awdiv@quotient,w
  1066  00F3  00A6               	movwf	?___awdiv
  1067  00F4                     l314:
  1068  00F4  0008               	return
  1069  00F5                     __end_of___awdiv:
  1070                           
  1071                           	psect	text5
  1072  00F5                     __ptext5:	
  1073 ;; *************** function _isr *****************
  1074 ;; Defined at:
  1075 ;;		line 70 in file "Lab07.c"
  1076 ;; Parameters:    Size  Location     Type
  1077 ;;		None
  1078 ;; Auto vars:     Size  Location     Type
  1079 ;;		None
  1080 ;; Return value:  Size  Location     Type
  1081 ;;                  1    wreg      void 
  1082 ;; Registers used:
  1083 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1084 ;; Tracked objects:
  1085 ;;		On entry : 0/0
  1086 ;;		On exit  : 0/0
  1087 ;;		Unchanged: 0/0
  1088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1089 ;;      Params:         0       0       0       0       0
  1090 ;;      Locals:         0       0       0       0       0
  1091 ;;      Temps:          5       0       0       0       0
  1092 ;;      Totals:         5       0       0       0       0
  1093 ;;Total ram usage:        5 bytes
  1094 ;; Hardware stack levels used:    2
  1095 ;; This function calls:
  1096 ;;		Nothing
  1097 ;; This function is called by:
  1098 ;;		Interrupt level 1
  1099 ;; This function uses a non-reentrant model
  1100 ;;
  1101                           
  1102                           
  1103                           ;psect for function _isr
  1104  00F5                     _isr:
  1105  00F5                     i1l985:
  1106                           
  1107                           ;Lab07.c: 71:     if (RBIF == 1){
  1108  00F5  1C0B               	btfss	11,0	;volatile
  1109  00F6  28F8               	goto	u40_21
  1110  00F7  28F9               	goto	u40_20
  1111  00F8                     u40_21:
  1112  00F8  2908               	goto	i1l997
  1113  00F9                     u40_20:
  1114  00F9                     i1l987:
  1115                           
  1116                           ;Lab07.c: 72:         if (PORTBbits.RB0 == 0){
  1117  00F9  1806               	btfsc	6,0	;volatile
  1118  00FA  28FC               	goto	u41_21
  1119  00FB  28FD               	goto	u41_20
  1120  00FC                     u41_21:
  1121  00FC  2901               	goto	i1l991
  1122  00FD                     u41_20:
  1123  00FD                     i1l989:
  1124                           
  1125                           ;Lab07.c: 73:             PORTD++;
  1126  00FD  3001               	movlw	1
  1127  00FE  00F0               	movwf	??_isr
  1128  00FF  0870               	movf	??_isr,w
  1129  0100  0788               	addwf	8,f	;volatile
  1130  0101                     i1l991:
  1131                           
  1132                           ;Lab07.c: 75:         if (PORTBbits.RB1 == 0){
  1133  0101  1886               	btfsc	6,1	;volatile
  1134  0102  2904               	goto	u42_21
  1135  0103  2905               	goto	u42_20
  1136  0104                     u42_21:
  1137  0104  2907               	goto	i1l995
  1138  0105                     u42_20:
  1139  0105                     i1l993:
  1140                           
  1141                           ;Lab07.c: 76:             PORTD--;
  1142  0105  3001               	movlw	1
  1143  0106  0288               	subwf	8,f	;volatile
  1144  0107                     i1l995:
  1145                           
  1146                           ;Lab07.c: 78:         INTCONbits.RBIF = 0;
  1147  0107  100B               	bcf	11,0	;volatile
  1148  0108                     i1l997:
  1149                           
  1150                           ;Lab07.c: 81:     if (T0IF==1){
  1151  0108  1D0B               	btfss	11,2	;volatile
  1152  0109  290B               	goto	u43_21
  1153  010A  290C               	goto	u43_20
  1154  010B                     u43_21:
  1155  010B  2951               	goto	i1l64
  1156  010C                     u43_20:
  1157  010C                     i1l999:
  1158                           
  1159                           ;Lab07.c: 82:         INTCONbits.T0IF = 0;
  1160  010C  110B               	bcf	11,2	;volatile
  1161  010D                     i1l1001:
  1162                           
  1163                           ;Lab07.c: 83:         TMR0 = 247;
  1164  010D  30F7               	movlw	247
  1165  010E  0081               	movwf	1	;volatile
  1166  010F                     i1l1003:
  1167                           
  1168                           ;Lab07.c: 84:         PORTA = 0x00;
  1169  010F  0185               	clrf	5	;volatile
  1170  0110                     i1l1005:
  1171                           
  1172                           ;Lab07.c: 85:         if (segm==0){
  1173  0110  0878               	movf	_segm,w
  1174  0111  0479               	iorwf	_segm+1,w
  1175  0112  1D03               	btfss	3,2
  1176  0113  2915               	goto	u44_21
  1177  0114  2916               	goto	u44_20
  1178  0115                     u44_21:
  1179  0115  2926               	goto	i1l1013
  1180  0116                     u44_20:
  1181  0116                     i1l1007:
  1182                           
  1183                           ;Lab07.c: 86:             PORTC = tabla[cen];
  1184  0116  0877               	movf	_cen,w
  1185  0117  3E01               	addlw	low ((_tabla-__stringbase)| (0+32768))
  1186  0118  0084               	movwf	4
  1187  0119  120A  118A  21C6  120A  118A  	fcall	stringdir
  1188  011E  0087               	movwf	7	;volatile
  1189  011F                     i1l1009:
  1190                           
  1191                           ;Lab07.c: 87:             PORTA = 0x01;
  1192  011F  3001               	movlw	1
  1193  0120  0085               	movwf	5	;volatile
  1194  0121                     i1l1011:
  1195                           
  1196                           ;Lab07.c: 88:             segm = 1;
  1197  0121  3001               	movlw	1
  1198  0122  00F8               	movwf	_segm
  1199  0123  3000               	movlw	0
  1200  0124  00F9               	movwf	_segm+1
  1201                           
  1202                           ;Lab07.c: 89:         }
  1203  0125  2951               	goto	i1l64
  1204  0126                     i1l1013:
  1205  0126  0378               	decf	_segm,w
  1206  0127  0479               	iorwf	_segm+1,w
  1207  0128  1D03               	btfss	3,2
  1208  0129  292B               	goto	u45_21
  1209  012A  292C               	goto	u45_20
  1210  012B                     u45_21:
  1211  012B  293C               	goto	i1l1021
  1212  012C                     u45_20:
  1213  012C                     i1l1015:
  1214                           
  1215                           ;Lab07.c: 91:             PORTC = tabla[dec];
  1216  012C  0834               	movf	_dec,w
  1217  012D  3E01               	addlw	low ((_tabla-__stringbase)| (0+32768))
  1218  012E  0084               	movwf	4
  1219  012F  120A  118A  21C6  120A  118A  	fcall	stringdir
  1220  0134  0087               	movwf	7	;volatile
  1221  0135                     i1l1017:
  1222                           
  1223                           ;Lab07.c: 92:             PORTA = 0x02;
  1224  0135  3002               	movlw	2
  1225  0136  0085               	movwf	5	;volatile
  1226  0137                     i1l1019:
  1227                           
  1228                           ;Lab07.c: 93:             segm = 2;
  1229  0137  3002               	movlw	2
  1230  0138  00F8               	movwf	_segm
  1231  0139  3000               	movlw	0
  1232  013A  00F9               	movwf	_segm+1
  1233                           
  1234                           ;Lab07.c: 94:         }
  1235  013B  2951               	goto	i1l64
  1236  013C                     i1l1021:
  1237  013C  3002               	movlw	2
  1238  013D  0678               	xorwf	_segm,w
  1239  013E  0479               	iorwf	_segm+1,w
  1240  013F  1D03               	btfss	3,2
  1241  0140  2942               	goto	u46_21
  1242  0141  2943               	goto	u46_20
  1243  0142                     u46_21:
  1244  0142  2951               	goto	i1l60
  1245  0143                     u46_20:
  1246  0143                     i1l1023:
  1247                           
  1248                           ;Lab07.c: 96:             PORTC = tabla[uni];
  1249  0143  0833               	movf	_uni,w
  1250  0144  3E01               	addlw	low ((_tabla-__stringbase)| (0+32768))
  1251  0145  0084               	movwf	4
  1252  0146  120A  118A  21C6  120A  118A  	fcall	stringdir
  1253  014B  0087               	movwf	7	;volatile
  1254  014C                     i1l1025:
  1255                           
  1256                           ;Lab07.c: 97:             PORTA = 0x04;
  1257  014C  3004               	movlw	4
  1258  014D  0085               	movwf	5	;volatile
  1259  014E                     i1l1027:
  1260                           
  1261                           ;Lab07.c: 98:             segm = 0;
  1262  014E  01F8               	clrf	_segm
  1263  014F  01F9               	clrf	_segm+1
  1264  0150  2951               	goto	i1l64
  1265  0151                     i1l60:
  1266  0151                     i1l64:
  1267  0151  0874               	movf	??_isr+4,w
  1268  0152  00FF               	movwf	btemp+1
  1269  0153  0873               	movf	??_isr+3,w
  1270  0154  008A               	movwf	10
  1271  0155  0872               	movf	??_isr+2,w
  1272  0156  0084               	movwf	4
  1273  0157  0E71               	swapf	??_isr+1,w
  1274  0158  0083               	movwf	3
  1275  0159  0EFE               	swapf	btemp,f
  1276  015A  0E7E               	swapf	btemp,w
  1277  015B  0009               	retfie
  1278  015C                     __end_of_isr:
  1279  007E                     btemp	set	126	;btemp
  1280  007E                     wtemp0	set	126
  1281                           
  1282                           	psect	intentry
  1283  0004                     __pintentry:	
  1284                           ;incstack = 0
  1285                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath]
  1286                           
  1287  0004                     interrupt_function:
  1288  007E                     saved_w	set	btemp
  1289  0004  00FE               	movwf	btemp
  1290  0005  0E03               	swapf	3,w
  1291  0006  00F1               	movwf	??_isr+1
  1292  0007  0804               	movf	4,w
  1293  0008  00F2               	movwf	??_isr+2
  1294  0009  080A               	movf	10,w
  1295  000A  00F3               	movwf	??_isr+3
  1296  000B  1283               	bcf	3,5	;RP0=0, select bank0
  1297  000C  1303               	bcf	3,6	;RP1=0, select bank0
  1298  000D  087F               	movf	btemp+1,w
  1299  000E  00F4               	movwf	??_isr+4
  1300  000F  120A  118A  28F5   	ljmp	_isr
  1301                           
  1302                           	psect	config
  1303                           
  1304                           ;Config register CONFIG1 @ 0x2007
  1305                           ;	Oscillator Selection bits
  1306                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1307                           ;	Watchdog Timer Enable bit
  1308                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1309                           ;	Power-up Timer Enable bit
  1310                           ;	PWRTE = OFF, PWRT disabled
  1311                           ;	RE3/MCLR pin function select bit
  1312                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1313                           ;	Code Protection bit
  1314                           ;	CP = OFF, Program memory code protection is disabled
  1315                           ;	Data Code Protection bit
  1316                           ;	CPD = OFF, Data memory code protection is disabled
  1317                           ;	Brown Out Reset Selection bits
  1318                           ;	BOREN = OFF, BOR disabled
  1319                           ;	Internal External Switchover bit
  1320                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1321                           ;	Fail-Safe Clock Monitor Enabled bit
  1322                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1323                           ;	Low Voltage Programming Enable bit
  1324                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  1325                           ;	In-Circuit Debugger Mode bit
  1326                           ;	DEBUG = 0x1, unprogrammed default
  1327  2007                     	org	8199
  1328  2007  30D4               	dw	12500
  1329                           
  1330                           ;Config register CONFIG2 @ 0x2008
  1331                           ;	Brown-out Reset Selection bit
  1332                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1333                           ;	Flash Program Memory Self Write Enable bits
  1334                           ;	WRT = OFF, Write protection off
  1335  2008                     	org	8200
  1336  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    10
    Data        0
    BSS         2
    Persistent  5
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     19      21
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___awdiv
    ___awdiv->___wmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    1236
                                             15 BANK0      4     4      0
                            ___awdiv
                             ___bmul
                             ___wmul
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     316
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) ___bmul                                               4     3      1     316
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     604
                                              6 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
     ___wmul (ARG)
   ___bmul
   ___wmul
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     13      15       5       26.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1F      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Apr 18 22:57:58 2021

                      pc 0002           ___bmul@product 0022                       l75 0187  
           ___awdiv@sign 002C                       fsr 0004      ___wmul@multiplicand 0022  
                    l161 0196                      l314 00F4                      l163 01AE  
                    l187 01C5                      l941 008C                      l951 009E  
                    l943 008F                      l961 00B2                      l953 00A3  
                    l945 0093                      l971 00D8                      l963 00B9  
                    l955 00A7                      l947 0098                      l981 00F0  
                    l973 00D9                      l965 00BD                      l957 00A9  
                    l949 009A                      l975 00E0                      l967 00C1  
                    l959 00AF                      l969 00D2                      l977 00E6  
                    l979 00EB                      u300 0093                      u301 0092  
                    u310 009E                      u311 009D                      u320 00AF  
                    u321 00AE                      u340 00C1                      u500 01AA  
                    u341 00C0                      u501 01A9                      u510 01B7  
                    u335 00B3                      u511 01B6                      u360 00D2  
                    u520 01C4                      u361 00D1                      u521 01C3  
                    u355 00C2                      u380 00E6                      u381 00E5  
                    u365 00CE                      u390 00EB                      u470 0190  
                    u391 00EA                      u375 00DA                      u471 018F  
                    u485 0197                      u495 019E                      _dec 0034  
                    _cen 0077                      _dig 0075                      _isr 00F5  
                    fsr0 0004                      _uni 0033                     l1101 0186  
                   l1111 01A4                     l1103 0188                     l1121 01B7  
                   l1113 01AA                     l1105 018C                     l1123 01BB  
                   l1107 0190                     l1051 0164                     l1131 001B  
                   l1125 01BD                     l1117 01B2                     l1109 019D  
                   l1061 016B                     l1053 0165                     l1141 0027  
                   l1133 0020                     l1127 01C4                     l1119 01B3  
                   l1071 0172                     l1063 016C                     l1055 0166  
                   l1047 015C                     l1143 002E                     l1135 0023  
                   l1081 0177                     l1073 0173                     l1065 016F  
                   l1057 0167                     l1049 0160                     l1145 0041  
                   l1137 0024                     l1091 0181                     l1083 017B  
                   l1075 0174                     l1067 0170                     l1059 016A  
                   l1147 006A                     l1139 0025                     l1093 0182  
                   l1085 017E                     l1077 0175                     l1069 0171  
                   l1095 0183                     l1087 017F                     l1079 0176  
                   l1097 0184                     l1089 0180                     l1099 0185  
                   ?_isr 0070                     _T0IF 005A                     _RBIF 0058  
                   i1l60 0151                     i1l64 0151                     _TMR0 0001  
                   _main 001B                     _segm 0078                     btemp 007E  
                   start 0012        ___bmul@multiplier 0023                    ??_isr 0070  
                  ?_main 0070          __end_of___awdiv 00F5                    _ANSEL 0188  
        ___awdiv@divisor 0026                    i1l991 0101                    i1l993 0105  
                  i1l985 00F5                    i1l995 0107                    i1l987 00F9  
                  i1l989 00FD                    i1l997 0108                    i1l999 010C  
        ___awdiv@counter 002B                    u40_20 00F9                    u40_21 00F8  
                  u41_20 00FD                    u41_21 00FC                    u42_20 0105  
                  u42_21 0104                    u43_20 010C                    u43_21 010B  
                  _PORTA 0005                    _PORTC 0007                    _PORTD 0008  
                  u44_20 0116                    u44_21 0115                    u45_20 012C  
                  u45_21 012B                    u46_20 0143                    u46_21 0142  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _tabla 01CC                    _setup 015C  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 0015             __end_of_main 008C                   ??_main 002F  
       ___awdiv@dividend 0028                   ?_setup 0070                   _ANSELH 0189  
                 i1l1001 010D                   i1l1011 0121                   i1l1003 010F  
                 i1l1021 013C                   i1l1013 0126                   i1l1005 0110  
                 i1l1023 0143                   i1l1015 012C                   i1l1007 0116  
                 i1l1025 014C                   i1l1017 0135                   i1l1009 011F  
                 i1l1027 014E                   i1l1019 0137                   ___bmul 01AF  
                 ___wmul 0188                ??___awdiv 002A         ___awdiv@quotient 002D  
                 saved_w 007E  __end_of__initialization 0017      ___bmul@multiplicand 0020  
         __pcstackCOMMON 0070            __end_of_tabla 01D6            __end_of_setup 0188  
         _OPTION_REGbits 0081                  ??_setup 0020               __pnvCOMMON 0075  
             __pmaintext 001B                  ?___bmul 0020                  ?___wmul 0020  
             __pintentry 0004               __stringtab 01C6          __size_of___bmul 0017  
                ___awdiv 008C          __size_of___wmul 0027                  __ptext1 015C  
                __ptext2 0188                  __ptext3 01AF                  __ptext4 008C  
                __ptext5 00F5             __size_of_isr 0067     end_of_initialization 0017  
              _PORTBbits 0006           __end_of___bmul 01C6           __end_of___wmul 01AF  
    start_initialization 0015              __end_of_isr 015C                 ??___bmul 0021  
               ??___wmul 0024              __pbssCOMMON 0078                ___latbits 0002  
          __pcstackBANK0 0020                __pnvBANK0 0033                 ?___awdiv 0026  
              __pstrings 01C6           __size_of_setup 002C        interrupt_function 0004  
         ___wmul@product 0024                 _IOCBbits 0096              __stringbase 01CB  
      ___wmul@multiplier 0020                 _WPUBbits 0095         __size_of___awdiv 0069  
     __end_of__stringtab 01CC            __size_of_main 0071               _INTCONbits 000B  
               intlevel1 0000                stringcode 01C6               _OSCCONbits 008F  
               stringdir 01C6                 stringtab 01C6  
