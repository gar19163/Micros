

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Apr 23 22:02:15 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209                           
   210                           	psect	strings
   211  0200                     __pstrings:
   212  0200                     stringtab:
   213  0200                     __stringtab:
   214  0200                     stringcode:	
   215                           ;	String table - string pointers are 1 byte each
   216                           
   217  0200                     stringdir:
   218  0200  3002               	movlw	high stringdir
   219  0201  008A               	movwf	10
   220  0202  0804               	movf	4,w
   221  0203  0A84               	incf	4,f
   222  0204  0782               	addwf	2,f
   223  0205                     __stringbase:
   224  0205  3400               	retlw	0
   225  0206                     __end_of__stringtab:
   226  0206                     _tabla:
   227  0206  343F               	retlw	63
   228  0207  3406               	retlw	6
   229  0208  345B               	retlw	91
   230  0209  344F               	retlw	79
   231  020A  3466               	retlw	102
   232  020B  346D               	retlw	109
   233  020C  347D               	retlw	125
   234  020D  3407               	retlw	7
   235  020E  347F               	retlw	127
   236  020F  346F               	retlw	111
   237  0210                     __end_of_tabla:
   238  001E                     _ADRESH	set	30
   239  0008                     _PORTD	set	8
   240  001F                     _ADCON0bits	set	31
   241  000C                     _PIR1bits	set	12
   242  0007                     _PORTC	set	7
   243  0006                     _PORTB	set	6
   244  0001                     _TMR0	set	1
   245  000B                     _INTCONbits	set	11
   246  005A                     _T0IF	set	90
   247  008C                     _PIE1bits	set	140
   248  009F                     _ADCON1bits	set	159
   249  0081                     _OPTION_REGbits	set	129
   250  008F                     _OSCCONbits	set	143
   251  0088                     _TRISD	set	136
   252  0087                     _TRISC	set	135
   253  0086                     _TRISB	set	134
   254  0089                     _TRISE	set	137
   255  0189                     _ANSELH	set	393
   256  0188                     _ANSEL	set	392
   257                           
   258                           	psect	cinit
   259  0015                     start_initialization:	
   260                           ; #config settings
   261                           
   262  0015                     __initialization:
   263                           
   264                           ; Clear objects allocated to COMMON
   265  0015  01F6               	clrf	__pbssCOMMON& (0+127)
   266  0016  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   267                           
   268                           ; Clear objects allocated to BANK0
   269  0017  1283               	bcf	3,5	;RP0=0, select bank0
   270  0018  1303               	bcf	3,6	;RP1=0, select bank0
   271  0019  01B3               	clrf	__pbssBANK0& (0+127)
   272  001A  01B4               	clrf	(__pbssBANK0+1)& (0+127)
   273  001B  01B5               	clrf	(__pbssBANK0+2)& (0+127)
   274  001C  01B6               	clrf	(__pbssBANK0+3)& (0+127)
   275  001D  01B7               	clrf	(__pbssBANK0+4)& (0+127)
   276  001E  01B8               	clrf	(__pbssBANK0+5)& (0+127)
   277  001F  01B9               	clrf	(__pbssBANK0+6)& (0+127)
   278  0020  01BA               	clrf	(__pbssBANK0+7)& (0+127)
   279  0021                     end_of_initialization:	
   280                           ;End of C runtime variable initialization code
   281                           
   282  0021                     __end_of__initialization:
   283  0021  0183               	clrf	3
   284  0022  120A  118A  2825   	ljmp	_main	;jump to C main() function
   285                           
   286                           	psect	bssCOMMON
   287  0076                     __pbssCOMMON:
   288  0076                     _segm:
   289  0076                     	ds	2
   290                           
   291                           	psect	bssBANK0
   292  0033                     __pbssBANK0:
   293  0033                     _dig:
   294  0033                     	ds	2
   295  0035                     _uni:
   296  0035                     	ds	2
   297  0037                     _cen:
   298  0037                     	ds	2
   299  0039                     _dec:
   300  0039                     	ds	2
   301                           
   302                           	psect	cstackCOMMON
   303  0070                     __pcstackCOMMON:
   304  0070                     ?_setup:
   305  0070                     ?_isr:	
   306                           ; 1 bytes @ 0x0
   307                           
   308  0070                     ??_isr:	
   309                           ; 1 bytes @ 0x0
   310                           
   311  0070                     ?_main:	
   312                           ; 1 bytes @ 0x0
   313                           
   314                           
   315                           ; 1 bytes @ 0x0
   316  0070                     	ds	6
   317  0076                     ??___wmul:
   318                           
   319                           	psect	cstackBANK0
   320  0020                     __pcstackBANK0:	
   321                           ; 1 bytes @ 0x6
   322                           
   323  0020                     ??_setup:
   324  0020                     ?___wmul:	
   325                           ; 1 bytes @ 0x0
   326                           
   327  0020                     ___wmul@multiplier:	
   328                           ; 2 bytes @ 0x0
   329                           
   330                           
   331                           ; 2 bytes @ 0x0
   332  0020                     	ds	2
   333  0022                     ___wmul@multiplicand:
   334                           
   335                           ; 2 bytes @ 0x2
   336  0022                     	ds	2
   337  0024                     ___wmul@product:
   338                           
   339                           ; 2 bytes @ 0x4
   340  0024                     	ds	2
   341  0026                     ?___awdiv:
   342  0026                     ___awdiv@divisor:	
   343                           ; 2 bytes @ 0x6
   344                           
   345                           
   346                           ; 2 bytes @ 0x6
   347  0026                     	ds	2
   348  0028                     ___awdiv@dividend:
   349                           
   350                           ; 2 bytes @ 0x8
   351  0028                     	ds	2
   352  002A                     ??___awdiv:
   353                           
   354                           ; 1 bytes @ 0xA
   355  002A                     	ds	1
   356  002B                     ___awdiv@counter:
   357                           
   358                           ; 1 bytes @ 0xB
   359  002B                     	ds	1
   360  002C                     ___awdiv@sign:
   361                           
   362                           ; 1 bytes @ 0xC
   363  002C                     	ds	1
   364  002D                     ___awdiv@quotient:
   365                           
   366                           ; 2 bytes @ 0xD
   367  002D                     	ds	2
   368  002F                     ??_main:
   369                           
   370                           ; 1 bytes @ 0xF
   371  002F                     	ds	4
   372                           
   373                           	psect	maintext
   374  0025                     __pmaintext:	
   375 ;;
   376 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   377 ;;
   378 ;; *************** function _main *****************
   379 ;; Defined at:
   380 ;;		line 105 in file "Lab08.c"
   381 ;; Parameters:    Size  Location     Type
   382 ;;		None
   383 ;; Auto vars:     Size  Location     Type
   384 ;;		None
   385 ;; Return value:  Size  Location     Type
   386 ;;                  1    wreg      void 
   387 ;; Registers used:
   388 ;;		wreg, status,2, status,0, pclath, cstack
   389 ;; Tracked objects:
   390 ;;		On entry : B00/0
   391 ;;		On exit  : 0/0
   392 ;;		Unchanged: 0/0
   393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   394 ;;      Params:         0       0       0       0       0
   395 ;;      Locals:         0       0       0       0       0
   396 ;;      Temps:          0       4       0       0       0
   397 ;;      Totals:         0       4       0       0       0
   398 ;;Total ram usage:        4 bytes
   399 ;; Hardware stack levels required when called:    3
   400 ;; This function calls:
   401 ;;		___awdiv
   402 ;;		___wmul
   403 ;;		_setup
   404 ;; This function is called by:
   405 ;;		Startup code after reset
   406 ;; This function uses a non-reentrant model
   407 ;;
   408                           
   409                           
   410                           ;psect for function _main
   411  0025                     _main:
   412  0025                     l1078:	
   413                           ;incstack = 0
   414                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   415                           
   416                           
   417                           ;Lab08.c: 106:     setup();
   418  0025  120A  118A  2190  120A  118A  	fcall	_setup
   419  002A                     l73:	
   420                           ;Lab08.c: 108:     while (1) {
   421                           
   422                           
   423                           ;Lab08.c: 109:         cen = dig/100;
   424  002A  3064               	movlw	100
   425  002B  1283               	bcf	3,5	;RP0=0, select bank0
   426  002C  1303               	bcf	3,6	;RP1=0, select bank0
   427  002D  00A6               	movwf	___awdiv@divisor
   428  002E  3000               	movlw	0
   429  002F  00A7               	movwf	___awdiv@divisor+1
   430  0030  0834               	movf	_dig+1,w
   431  0031  00A9               	movwf	___awdiv@dividend+1
   432  0032  0833               	movf	_dig,w
   433  0033  00A8               	movwf	___awdiv@dividend
   434  0034  120A  118A  2127  120A  118A  	fcall	___awdiv
   435  0039  1283               	bcf	3,5	;RP0=0, select bank0
   436  003A  1303               	bcf	3,6	;RP1=0, select bank0
   437  003B  0827               	movf	?___awdiv+1,w
   438  003C  00B8               	movwf	_cen+1
   439  003D  0826               	movf	?___awdiv,w
   440  003E  00B7               	movwf	_cen
   441                           
   442                           ;Lab08.c: 110:         dec = (dig - (100 * cen))/10;
   443  003F  300A               	movlw	10
   444  0040  00A6               	movwf	___awdiv@divisor
   445  0041  3000               	movlw	0
   446  0042  00A7               	movwf	___awdiv@divisor+1
   447  0043  0838               	movf	_cen+1,w
   448  0044  00A1               	movwf	___wmul@multiplier+1
   449  0045  0837               	movf	_cen,w
   450  0046  00A0               	movwf	___wmul@multiplier
   451  0047  309C               	movlw	156
   452  0048  00A2               	movwf	___wmul@multiplicand
   453  0049  30FF               	movlw	255
   454  004A  00A3               	movwf	___wmul@multiplicand+1
   455  004B  120A  118A  21D5  120A  118A  	fcall	___wmul
   456  0050  1283               	bcf	3,5	;RP0=0, select bank0
   457  0051  1303               	bcf	3,6	;RP1=0, select bank0
   458  0052  0833               	movf	_dig,w
   459  0053  0720               	addwf	?___wmul,w
   460  0054  00A8               	movwf	___awdiv@dividend
   461  0055  0834               	movf	_dig+1,w
   462  0056  1803               	skipnc
   463  0057  0A34               	incf	_dig+1,w
   464  0058  0721               	addwf	?___wmul+1,w
   465  0059  00A9               	movwf	___awdiv@dividend+1
   466  005A  120A  118A  2127  120A  118A  	fcall	___awdiv
   467  005F  1283               	bcf	3,5	;RP0=0, select bank0
   468  0060  1303               	bcf	3,6	;RP1=0, select bank0
   469  0061  0827               	movf	?___awdiv+1,w
   470  0062  00BA               	movwf	_dec+1
   471  0063  0826               	movf	?___awdiv,w
   472  0064  00B9               	movwf	_dec
   473                           
   474                           ;Lab08.c: 111:         uni = dig - (100* cen) - (10*dec);
   475  0065  0838               	movf	_cen+1,w
   476  0066  00A1               	movwf	___wmul@multiplier+1
   477  0067  0837               	movf	_cen,w
   478  0068  00A0               	movwf	___wmul@multiplier
   479  0069  309C               	movlw	156
   480  006A  00A2               	movwf	___wmul@multiplicand
   481  006B  30FF               	movlw	255
   482  006C  00A3               	movwf	___wmul@multiplicand+1
   483  006D  120A  118A  21D5  120A  118A  	fcall	___wmul
   484  0072  1283               	bcf	3,5	;RP0=0, select bank0
   485  0073  1303               	bcf	3,6	;RP1=0, select bank0
   486  0074  0820               	movf	?___wmul,w
   487  0075  00AF               	movwf	??_main
   488  0076  0821               	movf	?___wmul+1,w
   489  0077  00B0               	movwf	??_main+1
   490  0078  083A               	movf	_dec+1,w
   491  0079  00A1               	movwf	___wmul@multiplier+1
   492  007A  0839               	movf	_dec,w
   493  007B  00A0               	movwf	___wmul@multiplier
   494  007C  30F6               	movlw	246
   495  007D  00A2               	movwf	___wmul@multiplicand
   496  007E  30FF               	movlw	255
   497  007F  00A3               	movwf	___wmul@multiplicand+1
   498  0080  120A  118A  21D5  120A  118A  	fcall	___wmul
   499  0085  1283               	bcf	3,5	;RP0=0, select bank0
   500  0086  1303               	bcf	3,6	;RP1=0, select bank0
   501  0087  0820               	movf	?___wmul,w
   502  0088  072F               	addwf	??_main,w
   503  0089  00B1               	movwf	??_main+2
   504  008A  0821               	movf	?___wmul+1,w
   505  008B  1803               	skipnc
   506  008C  0A21               	incf	?___wmul+1,w
   507  008D  0730               	addwf	??_main+1,w
   508  008E  00B2               	movwf	??_main+3
   509  008F  0833               	movf	_dig,w
   510  0090  0731               	addwf	??_main+2,w
   511  0091  00B5               	movwf	_uni
   512  0092  0834               	movf	_dig+1,w
   513  0093  1803               	skipnc
   514  0094  0A34               	incf	_dig+1,w
   515  0095  0732               	addwf	??_main+3,w
   516  0096  00B6               	movwf	_uni+1
   517  0097                     l1080:
   518                           
   519                           ;Lab08.c: 113:         if(ADCON0bits.GO == 0){
   520  0097  189F               	btfsc	31,1	;volatile
   521  0098  289A               	goto	u491
   522  0099  289B               	goto	u490
   523  009A                     u491:
   524  009A  282A               	goto	l73
   525  009B                     u490:
   526  009B                     l1082:
   527                           
   528                           ;Lab08.c: 114:             if(ADCON0bits.CHS == 5)
   529  009B  0C1F               	rrf	31,w	;volatile
   530  009C  00AF               	movwf	??_main
   531  009D  0C2F               	rrf	??_main,w
   532  009E  390F               	andlw	15
   533  009F  3A05               	xorlw	5
   534  00A0  1D03               	skipz
   535  00A1  28A3               	goto	u501
   536  00A2  28A4               	goto	u500
   537  00A3                     u501:
   538  00A3  28A9               	goto	l1086
   539  00A4                     u500:
   540  00A4                     l1084:
   541                           
   542                           ;Lab08.c: 115:                 ADCON0bits.CHS = 6;
   543  00A4  081F               	movf	31,w	;volatile
   544  00A5  39C3               	andlw	-61
   545  00A6  3818               	iorlw	24
   546  00A7  009F               	movwf	31	;volatile
   547  00A8  28AD               	goto	l1088
   548  00A9                     l1086:
   549                           
   550                           ;Lab08.c: 118:             ADCON0bits.CHS = 5;
   551  00A9  081F               	movf	31,w	;volatile
   552  00AA  39C3               	andlw	-61
   553  00AB  3814               	iorlw	20
   554  00AC  009F               	movwf	31	;volatile
   555  00AD                     l1088:
   556                           
   557                           ;Lab08.c: 120:             _delay((unsigned long)((50)*(4000000/4000000.0)));
   558  00AD  300F               	movlw	15
   559  00AE  1283               	bcf	3,5	;RP0=0, select bank0
   560  00AF  1303               	bcf	3,6	;RP1=0, select bank0
   561  00B0  00AF               	movwf	??_main
   562  00B1                     u517:
   563  00B1  0BAF               	decfsz	??_main,f
   564  00B2  28B1               	goto	u517
   565  00B3  28B4               	nop2
   566  00B4                     l1090:
   567                           
   568                           ;Lab08.c: 121:             ADCON0bits.GO = 1;
   569  00B4  1283               	bcf	3,5	;RP0=0, select bank0
   570  00B5  1303               	bcf	3,6	;RP1=0, select bank0
   571  00B6  149F               	bsf	31,1	;volatile
   572  00B7  282A               	goto	l73
   573  00B8  120A  118A  2812   	ljmp	start
   574  00BB                     __end_of_main:
   575                           
   576                           	psect	text1
   577  0190                     __ptext1:	
   578 ;; *************** function _setup *****************
   579 ;; Defined at:
   580 ;;		line 129 in file "Lab08.c"
   581 ;; Parameters:    Size  Location     Type
   582 ;;		None
   583 ;; Auto vars:     Size  Location     Type
   584 ;;		None
   585 ;; Return value:  Size  Location     Type
   586 ;;                  1    wreg      void 
   587 ;; Registers used:
   588 ;;		wreg, status,2, status,0
   589 ;; Tracked objects:
   590 ;;		On entry : 0/0
   591 ;;		On exit  : 0/0
   592 ;;		Unchanged: 0/0
   593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   594 ;;      Params:         0       0       0       0       0
   595 ;;      Locals:         0       0       0       0       0
   596 ;;      Temps:          0       1       0       0       0
   597 ;;      Totals:         0       1       0       0       0
   598 ;;Total ram usage:        1 bytes
   599 ;; Hardware stack levels used:    1
   600 ;; Hardware stack levels required when called:    2
   601 ;; This function calls:
   602 ;;		Nothing
   603 ;; This function is called by:
   604 ;;		_main
   605 ;; This function uses a non-reentrant model
   606 ;;
   607                           
   608                           
   609                           ;psect for function _setup
   610  0190                     _setup:
   611  0190                     l1010:	
   612                           ;incstack = 0
   613                           ; Regs used in _setup: [wreg+status,2+status,0]
   614                           
   615                           
   616                           ;Lab08.c: 132:     ANSEL = 0b01100000;
   617  0190  3060               	movlw	96
   618  0191  1683               	bsf	3,5	;RP0=1, select bank3
   619  0192  1703               	bsf	3,6	;RP1=1, select bank3
   620  0193  0088               	movwf	8	;volatile
   621  0194                     l1012:
   622                           
   623                           ;Lab08.c: 133:     ANSELH = 0x00;
   624  0194  0189               	clrf	9	;volatile
   625  0195                     l1014:
   626                           
   627                           ;Lab08.c: 136:     TRISE = 0x03;
   628  0195  3003               	movlw	3
   629  0196  1683               	bsf	3,5	;RP0=1, select bank1
   630  0197  1303               	bcf	3,6	;RP1=0, select bank1
   631  0198  0089               	movwf	9	;volatile
   632                           
   633                           ;Lab08.c: 137:     TRISB = 0x00;
   634  0199  0186               	clrf	6	;volatile
   635                           
   636                           ;Lab08.c: 138:     TRISC = 0x00;
   637  019A  0187               	clrf	7	;volatile
   638                           
   639                           ;Lab08.c: 139:     TRISD = 0x00;
   640  019B  0188               	clrf	8	;volatile
   641                           
   642                           ;Lab08.c: 142:     PORTB = 0x00;
   643  019C  1283               	bcf	3,5	;RP0=0, select bank0
   644  019D  1303               	bcf	3,6	;RP1=0, select bank0
   645  019E  0186               	clrf	6	;volatile
   646                           
   647                           ;Lab08.c: 143:     PORTC = 0x00;
   648  019F  0187               	clrf	7	;volatile
   649                           
   650                           ;Lab08.c: 144:     PORTD = 0x00;
   651  01A0  0188               	clrf	8	;volatile
   652  01A1                     l1016:
   653                           
   654                           ;Lab08.c: 147:     OSCCONbits.IRCF2 = 1;
   655  01A1  1683               	bsf	3,5	;RP0=1, select bank1
   656  01A2  1303               	bcf	3,6	;RP1=0, select bank1
   657  01A3  170F               	bsf	15,6	;volatile
   658  01A4                     l1018:
   659                           
   660                           ;Lab08.c: 148:     OSCCONbits.IRCF1 = 1;
   661  01A4  168F               	bsf	15,5	;volatile
   662  01A5                     l1020:
   663                           
   664                           ;Lab08.c: 149:     OSCCONbits.IRCF0 = 0;
   665  01A5  120F               	bcf	15,4	;volatile
   666  01A6                     l1022:
   667                           
   668                           ;Lab08.c: 150:     OSCCONbits.SCS = 1;
   669  01A6  140F               	bsf	15,0	;volatile
   670  01A7                     l1024:
   671                           
   672                           ;Lab08.c: 153:     OPTION_REGbits.T0CS = 0;
   673  01A7  1281               	bcf	1,5	;volatile
   674  01A8                     l1026:
   675                           
   676                           ;Lab08.c: 154:     OPTION_REGbits.PSA = 0;
   677  01A8  1181               	bcf	1,3	;volatile
   678  01A9                     l1028:
   679                           
   680                           ;Lab08.c: 155:     OPTION_REGbits.PS2 = 1;
   681  01A9  1501               	bsf	1,2	;volatile
   682  01AA                     l1030:
   683                           
   684                           ;Lab08.c: 156:     OPTION_REGbits.PS1 = 1;
   685  01AA  1481               	bsf	1,1	;volatile
   686  01AB                     l1032:
   687                           
   688                           ;Lab08.c: 157:     OPTION_REGbits.PS0 = 0;
   689  01AB  1001               	bcf	1,0	;volatile
   690  01AC                     l1034:
   691                           
   692                           ;Lab08.c: 158:     TMR0 = 247;
   693  01AC  30F7               	movlw	247
   694  01AD  1283               	bcf	3,5	;RP0=0, select bank0
   695  01AE  1303               	bcf	3,6	;RP1=0, select bank0
   696  01AF  0081               	movwf	1	;volatile
   697  01B0                     l1036:
   698                           
   699                           ;Lab08.c: 161:     ADCON1bits.ADFM = 0;
   700  01B0  1683               	bsf	3,5	;RP0=1, select bank1
   701  01B1  1303               	bcf	3,6	;RP1=0, select bank1
   702  01B2  139F               	bcf	31,7	;volatile
   703  01B3                     l1038:
   704                           
   705                           ;Lab08.c: 162:     ADCON1bits.VCFG0 = 0;
   706  01B3  121F               	bcf	31,4	;volatile
   707  01B4                     l1040:
   708                           
   709                           ;Lab08.c: 163:     ADCON1bits.VCFG1 = 0;
   710  01B4  129F               	bcf	31,5	;volatile
   711  01B5                     l1042:
   712                           
   713                           ;Lab08.c: 164:     ADCON0bits.ADCS = 1;
   714  01B5  1283               	bcf	3,5	;RP0=0, select bank0
   715  01B6  1303               	bcf	3,6	;RP1=0, select bank0
   716  01B7  081F               	movf	31,w	;volatile
   717  01B8  393F               	andlw	-193
   718  01B9  3840               	iorlw	64
   719  01BA  009F               	movwf	31	;volatile
   720  01BB                     l1044:
   721                           
   722                           ;Lab08.c: 165:     ADCON0bits.CHS = 5;
   723  01BB  081F               	movf	31,w	;volatile
   724  01BC  39C3               	andlw	-61
   725  01BD  3814               	iorlw	20
   726  01BE  009F               	movwf	31	;volatile
   727  01BF                     l1046:
   728                           
   729                           ;Lab08.c: 166:     _delay((unsigned long)((100)*(4000000/4000000.0)));
   730  01BF  3020               	movlw	32
   731  01C0  1283               	bcf	3,5	;RP0=0, select bank0
   732  01C1  1303               	bcf	3,6	;RP1=0, select bank0
   733  01C2  00A0               	movwf	??_setup
   734  01C3                     u527:
   735  01C3  0BA0               	decfsz	??_setup,f
   736  01C4  29C3               	goto	u527
   737  01C5  0000               	nop
   738  01C6                     l1048:
   739                           
   740                           ;Lab08.c: 167:     ADCON0bits.ADON = 1;
   741  01C6  1283               	bcf	3,5	;RP0=0, select bank0
   742  01C7  1303               	bcf	3,6	;RP1=0, select bank0
   743  01C8  141F               	bsf	31,0	;volatile
   744  01C9                     l1050:
   745                           
   746                           ;Lab08.c: 170:     INTCONbits.GIE = 1;
   747  01C9  178B               	bsf	11,7	;volatile
   748  01CA                     l1052:
   749                           
   750                           ;Lab08.c: 171:     INTCONbits.T0IE = 1;
   751  01CA  168B               	bsf	11,5	;volatile
   752  01CB                     l1054:
   753                           
   754                           ;Lab08.c: 172:     INTCONbits.T0IF = 0;
   755  01CB  110B               	bcf	11,2	;volatile
   756  01CC                     l1056:
   757                           
   758                           ;Lab08.c: 173:     PIE1bits.ADIE = 1;
   759  01CC  1683               	bsf	3,5	;RP0=1, select bank1
   760  01CD  1303               	bcf	3,6	;RP1=0, select bank1
   761  01CE  170C               	bsf	12,6	;volatile
   762  01CF                     l1058:
   763                           
   764                           ;Lab08.c: 174:     PIR1bits.ADIF = 0;
   765  01CF  1283               	bcf	3,5	;RP0=0, select bank0
   766  01D0  1303               	bcf	3,6	;RP1=0, select bank0
   767  01D1  130C               	bcf	12,6	;volatile
   768  01D2                     l1060:
   769                           
   770                           ;Lab08.c: 175:     ADCON0bits.GO = 1;
   771  01D2  149F               	bsf	31,1	;volatile
   772  01D3                     l1062:
   773                           
   774                           ;Lab08.c: 176:     INTCONbits.PEIE = 1;
   775  01D3  170B               	bsf	11,6	;volatile
   776  01D4                     l82:
   777  01D4  0008               	return
   778  01D5                     __end_of_setup:
   779                           
   780                           	psect	text2
   781  01D5                     __ptext2:	
   782 ;; *************** function ___wmul *****************
   783 ;; Defined at:
   784 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
   785 ;; Parameters:    Size  Location     Type
   786 ;;  multiplier      2    0[BANK0 ] unsigned int 
   787 ;;  multiplicand    2    2[BANK0 ] unsigned int 
   788 ;; Auto vars:     Size  Location     Type
   789 ;;  product         2    4[BANK0 ] unsigned int 
   790 ;; Return value:  Size  Location     Type
   791 ;;                  2    0[BANK0 ] unsigned int 
   792 ;; Registers used:
   793 ;;		wreg, status,2, status,0
   794 ;; Tracked objects:
   795 ;;		On entry : 0/0
   796 ;;		On exit  : 0/0
   797 ;;		Unchanged: 0/0
   798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   799 ;;      Params:         0       4       0       0       0
   800 ;;      Locals:         0       2       0       0       0
   801 ;;      Temps:          0       0       0       0       0
   802 ;;      Totals:         0       6       0       0       0
   803 ;;Total ram usage:        6 bytes
   804 ;; Hardware stack levels used:    1
   805 ;; Hardware stack levels required when called:    2
   806 ;; This function calls:
   807 ;;		Nothing
   808 ;; This function is called by:
   809 ;;		_main
   810 ;; This function uses a non-reentrant model
   811 ;;
   812                           
   813                           
   814                           ;psect for function ___wmul
   815  01D5                     ___wmul:
   816  01D5                     l1064:	
   817                           ;incstack = 0
   818                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   819                           
   820  01D5  1283               	bcf	3,5	;RP0=0, select bank0
   821  01D6  1303               	bcf	3,6	;RP1=0, select bank0
   822  01D7  01A4               	clrf	___wmul@product
   823  01D8  01A5               	clrf	___wmul@product+1
   824  01D9                     l1066:
   825  01D9  1C20               	btfss	___wmul@multiplier,0
   826  01DA  29DC               	goto	u451
   827  01DB  29DD               	goto	u450
   828  01DC                     u451:
   829  01DC  29E3               	goto	l168
   830  01DD                     u450:
   831  01DD                     l1068:
   832  01DD  0822               	movf	___wmul@multiplicand,w
   833  01DE  07A4               	addwf	___wmul@product,f
   834  01DF  1803               	skipnc
   835  01E0  0AA5               	incf	___wmul@product+1,f
   836  01E1  0823               	movf	___wmul@multiplicand+1,w
   837  01E2  07A5               	addwf	___wmul@product+1,f
   838  01E3                     l168:
   839  01E3  3001               	movlw	1
   840  01E4                     u465:
   841  01E4  1003               	clrc
   842  01E5  0DA2               	rlf	___wmul@multiplicand,f
   843  01E6  0DA3               	rlf	___wmul@multiplicand+1,f
   844  01E7  3EFF               	addlw	-1
   845  01E8  1D03               	skipz
   846  01E9  29E4               	goto	u465
   847  01EA                     l1070:
   848  01EA  3001               	movlw	1
   849  01EB                     u475:
   850  01EB  1003               	clrc
   851  01EC  0CA1               	rrf	___wmul@multiplier+1,f
   852  01ED  0CA0               	rrf	___wmul@multiplier,f
   853  01EE  3EFF               	addlw	-1
   854  01EF  1D03               	skipz
   855  01F0  29EB               	goto	u475
   856  01F1                     l1072:
   857  01F1  0820               	movf	___wmul@multiplier,w
   858  01F2  0421               	iorwf	___wmul@multiplier+1,w
   859  01F3  1D03               	btfss	3,2
   860  01F4  29F6               	goto	u481
   861  01F5  29F7               	goto	u480
   862  01F6                     u481:
   863  01F6  29D9               	goto	l1066
   864  01F7                     u480:
   865  01F7                     l1074:
   866  01F7  0825               	movf	___wmul@product+1,w
   867  01F8  00A1               	movwf	?___wmul+1
   868  01F9  0824               	movf	___wmul@product,w
   869  01FA  00A0               	movwf	?___wmul
   870  01FB                     l170:
   871  01FB  0008               	return
   872  01FC                     __end_of___wmul:
   873                           
   874                           	psect	text3
   875  0127                     __ptext3:	
   876 ;; *************** function ___awdiv *****************
   877 ;; Defined at:
   878 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
   879 ;; Parameters:    Size  Location     Type
   880 ;;  divisor         2    6[BANK0 ] int 
   881 ;;  dividend        2    8[BANK0 ] int 
   882 ;; Auto vars:     Size  Location     Type
   883 ;;  quotient        2   13[BANK0 ] int 
   884 ;;  sign            1   12[BANK0 ] unsigned char 
   885 ;;  counter         1   11[BANK0 ] unsigned char 
   886 ;; Return value:  Size  Location     Type
   887 ;;                  2    6[BANK0 ] int 
   888 ;; Registers used:
   889 ;;		wreg, status,2, status,0
   890 ;; Tracked objects:
   891 ;;		On entry : 0/0
   892 ;;		On exit  : 0/0
   893 ;;		Unchanged: 0/0
   894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   895 ;;      Params:         0       4       0       0       0
   896 ;;      Locals:         0       4       0       0       0
   897 ;;      Temps:          0       1       0       0       0
   898 ;;      Totals:         0       9       0       0       0
   899 ;;Total ram usage:        9 bytes
   900 ;; Hardware stack levels used:    1
   901 ;; Hardware stack levels required when called:    2
   902 ;; This function calls:
   903 ;;		Nothing
   904 ;; This function is called by:
   905 ;;		_main
   906 ;; This function uses a non-reentrant model
   907 ;;
   908                           
   909                           
   910                           ;psect for function ___awdiv
   911  0127                     ___awdiv:
   912  0127                     l910:	
   913                           ;incstack = 0
   914                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   915                           
   916  0127  1283               	bcf	3,5	;RP0=0, select bank0
   917  0128  1303               	bcf	3,6	;RP1=0, select bank0
   918  0129  01AC               	clrf	___awdiv@sign
   919  012A                     l912:
   920  012A  1FA7               	btfss	___awdiv@divisor+1,7
   921  012B  292D               	goto	u271
   922  012C  292E               	goto	u270
   923  012D                     u271:
   924  012D  2935               	goto	l918
   925  012E                     u270:
   926  012E                     l914:
   927  012E  09A6               	comf	___awdiv@divisor,f
   928  012F  09A7               	comf	___awdiv@divisor+1,f
   929  0130  0AA6               	incf	___awdiv@divisor,f
   930  0131  1903               	skipnz
   931  0132  0AA7               	incf	___awdiv@divisor+1,f
   932  0133                     l916:
   933  0133  01AC               	clrf	___awdiv@sign
   934  0134  0AAC               	incf	___awdiv@sign,f
   935  0135                     l918:
   936  0135  1FA9               	btfss	___awdiv@dividend+1,7
   937  0136  2938               	goto	u281
   938  0137  2939               	goto	u280
   939  0138                     u281:
   940  0138  2942               	goto	l924
   941  0139                     u280:
   942  0139                     l920:
   943  0139  09A8               	comf	___awdiv@dividend,f
   944  013A  09A9               	comf	___awdiv@dividend+1,f
   945  013B  0AA8               	incf	___awdiv@dividend,f
   946  013C  1903               	skipnz
   947  013D  0AA9               	incf	___awdiv@dividend+1,f
   948  013E                     l922:
   949  013E  3001               	movlw	1
   950  013F  00AA               	movwf	??___awdiv
   951  0140  082A               	movf	??___awdiv,w
   952  0141  06AC               	xorwf	___awdiv@sign,f
   953  0142                     l924:
   954  0142  01AD               	clrf	___awdiv@quotient
   955  0143  01AE               	clrf	___awdiv@quotient+1
   956  0144                     l926:
   957  0144  0826               	movf	___awdiv@divisor,w
   958  0145  0427               	iorwf	___awdiv@divisor+1,w
   959  0146  1903               	btfsc	3,2
   960  0147  2949               	goto	u291
   961  0148  294A               	goto	u290
   962  0149                     u291:
   963  0149  2981               	goto	l946
   964  014A                     u290:
   965  014A                     l928:
   966  014A  01AB               	clrf	___awdiv@counter
   967  014B  0AAB               	incf	___awdiv@counter,f
   968  014C  2958               	goto	l934
   969  014D                     l930:
   970  014D  3001               	movlw	1
   971  014E                     u305:
   972  014E  1003               	clrc
   973  014F  0DA6               	rlf	___awdiv@divisor,f
   974  0150  0DA7               	rlf	___awdiv@divisor+1,f
   975  0151  3EFF               	addlw	-1
   976  0152  1D03               	skipz
   977  0153  294E               	goto	u305
   978  0154                     l932:
   979  0154  3001               	movlw	1
   980  0155  00AA               	movwf	??___awdiv
   981  0156  082A               	movf	??___awdiv,w
   982  0157  07AB               	addwf	___awdiv@counter,f
   983  0158                     l934:
   984  0158  1FA7               	btfss	___awdiv@divisor+1,7
   985  0159  295B               	goto	u311
   986  015A  295C               	goto	u310
   987  015B                     u311:
   988  015B  294D               	goto	l930
   989  015C                     u310:
   990  015C                     l936:
   991  015C  3001               	movlw	1
   992  015D                     u325:
   993  015D  1003               	clrc
   994  015E  0DAD               	rlf	___awdiv@quotient,f
   995  015F  0DAE               	rlf	___awdiv@quotient+1,f
   996  0160  3EFF               	addlw	-1
   997  0161  1D03               	skipz
   998  0162  295D               	goto	u325
   999  0163  0827               	movf	___awdiv@divisor+1,w
  1000  0164  0229               	subwf	___awdiv@dividend+1,w
  1001  0165  1D03               	skipz
  1002  0166  2969               	goto	u335
  1003  0167  0826               	movf	___awdiv@divisor,w
  1004  0168  0228               	subwf	___awdiv@dividend,w
  1005  0169                     u335:
  1006  0169  1C03               	skipc
  1007  016A  296C               	goto	u331
  1008  016B  296D               	goto	u330
  1009  016C                     u331:
  1010  016C  2974               	goto	l942
  1011  016D                     u330:
  1012  016D                     l938:
  1013  016D  0826               	movf	___awdiv@divisor,w
  1014  016E  02A8               	subwf	___awdiv@dividend,f
  1015  016F  0827               	movf	___awdiv@divisor+1,w
  1016  0170  1C03               	skipc
  1017  0171  03A9               	decf	___awdiv@dividend+1,f
  1018  0172  02A9               	subwf	___awdiv@dividend+1,f
  1019  0173                     l940:
  1020  0173  142D               	bsf	___awdiv@quotient,0
  1021  0174                     l942:
  1022  0174  3001               	movlw	1
  1023  0175                     u345:
  1024  0175  1003               	clrc
  1025  0176  0CA7               	rrf	___awdiv@divisor+1,f
  1026  0177  0CA6               	rrf	___awdiv@divisor,f
  1027  0178  3EFF               	addlw	-1
  1028  0179  1D03               	skipz
  1029  017A  2975               	goto	u345
  1030  017B                     l944:
  1031  017B  3001               	movlw	1
  1032  017C  02AB               	subwf	___awdiv@counter,f
  1033  017D  1D03               	btfss	3,2
  1034  017E  2980               	goto	u351
  1035  017F  2981               	goto	u350
  1036  0180                     u351:
  1037  0180  295C               	goto	l936
  1038  0181                     u350:
  1039  0181                     l946:
  1040  0181  082C               	movf	___awdiv@sign,w
  1041  0182  1903               	btfsc	3,2
  1042  0183  2985               	goto	u361
  1043  0184  2986               	goto	u360
  1044  0185                     u361:
  1045  0185  298B               	goto	l950
  1046  0186                     u360:
  1047  0186                     l948:
  1048  0186  09AD               	comf	___awdiv@quotient,f
  1049  0187  09AE               	comf	___awdiv@quotient+1,f
  1050  0188  0AAD               	incf	___awdiv@quotient,f
  1051  0189  1903               	skipnz
  1052  018A  0AAE               	incf	___awdiv@quotient+1,f
  1053  018B                     l950:
  1054  018B  082E               	movf	___awdiv@quotient+1,w
  1055  018C  00A7               	movwf	?___awdiv+1
  1056  018D  082D               	movf	___awdiv@quotient,w
  1057  018E  00A6               	movwf	?___awdiv
  1058  018F                     l321:
  1059  018F  0008               	return
  1060  0190                     __end_of___awdiv:
  1061                           
  1062                           	psect	text4
  1063  00BB                     __ptext4:	
  1064 ;; *************** function _isr *****************
  1065 ;; Defined at:
  1066 ;;		line 71 in file "Lab08.c"
  1067 ;; Parameters:    Size  Location     Type
  1068 ;;		None
  1069 ;; Auto vars:     Size  Location     Type
  1070 ;;		None
  1071 ;; Return value:  Size  Location     Type
  1072 ;;                  1    wreg      void 
  1073 ;; Registers used:
  1074 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1075 ;; Tracked objects:
  1076 ;;		On entry : 0/0
  1077 ;;		On exit  : 0/0
  1078 ;;		Unchanged: 0/0
  1079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1080 ;;      Params:         0       0       0       0       0
  1081 ;;      Locals:         0       0       0       0       0
  1082 ;;      Temps:          6       0       0       0       0
  1083 ;;      Totals:         6       0       0       0       0
  1084 ;;Total ram usage:        6 bytes
  1085 ;; Hardware stack levels used:    2
  1086 ;; This function calls:
  1087 ;;		Nothing
  1088 ;; This function is called by:
  1089 ;;		Interrupt level 1
  1090 ;; This function uses a non-reentrant model
  1091 ;;
  1092                           
  1093                           
  1094                           ;psect for function _isr
  1095  00BB                     _isr:
  1096  00BB                     i1l954:
  1097                           
  1098                           ;Lab08.c: 72:     if (T0IF==1){
  1099  00BB  1D0B               	btfss	11,2	;volatile
  1100  00BC  28BE               	goto	u37_21
  1101  00BD  28BF               	goto	u37_20
  1102  00BE                     u37_21:
  1103  00BE  2904               	goto	i1l986
  1104  00BF                     u37_20:
  1105  00BF                     i1l956:
  1106                           
  1107                           ;Lab08.c: 73:         INTCONbits.T0IF = 0;
  1108  00BF  110B               	bcf	11,2	;volatile
  1109  00C0                     i1l958:
  1110                           
  1111                           ;Lab08.c: 74:         TMR0 = 247;
  1112  00C0  30F7               	movlw	247
  1113  00C1  0081               	movwf	1	;volatile
  1114  00C2                     i1l960:
  1115                           
  1116                           ;Lab08.c: 75:         PORTB = 0x00;
  1117  00C2  0186               	clrf	6	;volatile
  1118  00C3                     i1l962:
  1119                           
  1120                           ;Lab08.c: 76:         if (segm==0){
  1121  00C3  0876               	movf	_segm,w
  1122  00C4  0477               	iorwf	_segm+1,w
  1123  00C5  1D03               	btfss	3,2
  1124  00C6  28C8               	goto	u38_21
  1125  00C7  28C9               	goto	u38_20
  1126  00C8                     u38_21:
  1127  00C8  28D9               	goto	i1l970
  1128  00C9                     u38_20:
  1129  00C9                     i1l964:
  1130                           
  1131                           ;Lab08.c: 77:             PORTC = tabla[cen];
  1132  00C9  0837               	movf	_cen,w
  1133  00CA  3E01               	addlw	low ((_tabla-__stringbase)| (0+32768))
  1134  00CB  0084               	movwf	4
  1135  00CC  120A  118A  2200  120A  118A  	fcall	stringdir
  1136  00D1  0087               	movwf	7	;volatile
  1137  00D2                     i1l966:
  1138                           
  1139                           ;Lab08.c: 78:             PORTB = 0x01;
  1140  00D2  3001               	movlw	1
  1141  00D3  0086               	movwf	6	;volatile
  1142  00D4                     i1l968:
  1143                           
  1144                           ;Lab08.c: 79:             segm = 1;
  1145  00D4  3001               	movlw	1
  1146  00D5  00F6               	movwf	_segm
  1147  00D6  3000               	movlw	0
  1148  00D7  00F7               	movwf	_segm+1
  1149                           
  1150                           ;Lab08.c: 80:         }
  1151  00D8  2904               	goto	i1l986
  1152  00D9                     i1l970:
  1153  00D9  0376               	decf	_segm,w
  1154  00DA  0477               	iorwf	_segm+1,w
  1155  00DB  1D03               	btfss	3,2
  1156  00DC  28DE               	goto	u39_21
  1157  00DD  28DF               	goto	u39_20
  1158  00DE                     u39_21:
  1159  00DE  28EF               	goto	i1l978
  1160  00DF                     u39_20:
  1161  00DF                     i1l972:
  1162                           
  1163                           ;Lab08.c: 82:             PORTC = tabla[dec];
  1164  00DF  0839               	movf	_dec,w
  1165  00E0  3E01               	addlw	low ((_tabla-__stringbase)| (0+32768))
  1166  00E1  0084               	movwf	4
  1167  00E2  120A  118A  2200  120A  118A  	fcall	stringdir
  1168  00E7  0087               	movwf	7	;volatile
  1169  00E8                     i1l974:
  1170                           
  1171                           ;Lab08.c: 83:             PORTB = 0x02;
  1172  00E8  3002               	movlw	2
  1173  00E9  0086               	movwf	6	;volatile
  1174  00EA                     i1l976:
  1175                           
  1176                           ;Lab08.c: 84:             segm = 2;
  1177  00EA  3002               	movlw	2
  1178  00EB  00F6               	movwf	_segm
  1179  00EC  3000               	movlw	0
  1180  00ED  00F7               	movwf	_segm+1
  1181                           
  1182                           ;Lab08.c: 85:         }
  1183  00EE  2904               	goto	i1l986
  1184  00EF                     i1l978:
  1185  00EF  3002               	movlw	2
  1186  00F0  0676               	xorwf	_segm,w
  1187  00F1  0477               	iorwf	_segm+1,w
  1188  00F2  1D03               	btfss	3,2
  1189  00F3  28F5               	goto	u40_21
  1190  00F4  28F6               	goto	u40_20
  1191  00F5                     u40_21:
  1192  00F5  2904               	goto	i1l61
  1193  00F6                     u40_20:
  1194  00F6                     i1l980:
  1195                           
  1196                           ;Lab08.c: 87:             PORTC = tabla[uni];
  1197  00F6  0835               	movf	_uni,w
  1198  00F7  3E01               	addlw	low ((_tabla-__stringbase)| (0+32768))
  1199  00F8  0084               	movwf	4
  1200  00F9  120A  118A  2200  120A  118A  	fcall	stringdir
  1201  00FE  0087               	movwf	7	;volatile
  1202  00FF                     i1l982:
  1203                           
  1204                           ;Lab08.c: 88:             PORTB = 0x04;
  1205  00FF  3004               	movlw	4
  1206  0100  0086               	movwf	6	;volatile
  1207  0101                     i1l984:
  1208                           
  1209                           ;Lab08.c: 89:             segm = 0;
  1210  0101  01F6               	clrf	_segm
  1211  0102  01F7               	clrf	_segm+1
  1212  0103  2904               	goto	i1l986
  1213  0104                     i1l61:
  1214  0104                     i1l986:
  1215                           
  1216                           ;Lab08.c: 93:  if(PIR1bits.ADIF == 1){
  1217  0104  1F0C               	btfss	12,6	;volatile
  1218  0105  2907               	goto	u41_21
  1219  0106  2908               	goto	u41_20
  1220  0107                     u41_21:
  1221  0107  291C               	goto	i1l68
  1222  0108                     u41_20:
  1223  0108                     i1l988:
  1224                           
  1225                           ;Lab08.c: 94:         if(ADCON0bits.CHS == 5)
  1226  0108  0C1F               	rrf	31,w	;volatile
  1227  0109  00F0               	movwf	??_isr
  1228  010A  0C70               	rrf	??_isr,w
  1229  010B  390F               	andlw	15
  1230  010C  3A05               	xorlw	5
  1231  010D  1D03               	skipz
  1232  010E  2910               	goto	u42_21
  1233  010F  2911               	goto	u42_20
  1234  0110                     u42_21:
  1235  0110  2914               	goto	i1l992
  1236  0111                     u42_20:
  1237  0111                     i1l990:
  1238                           
  1239                           ;Lab08.c: 95:             PORTD = ADRESH;
  1240  0111  081E               	movf	30,w	;volatile
  1241  0112  0088               	movwf	8	;volatile
  1242  0113  291B               	goto	i1l994
  1243  0114                     i1l992:
  1244                           
  1245                           ;Lab08.c: 97:             dig = ADRESH;
  1246  0114  081E               	movf	30,w	;volatile
  1247  0115  00F0               	movwf	??_isr
  1248  0116  01F1               	clrf	??_isr+1
  1249  0117  0870               	movf	??_isr,w
  1250  0118  00B3               	movwf	_dig
  1251  0119  0871               	movf	??_isr+1,w
  1252  011A  00B4               	movwf	_dig+1
  1253  011B                     i1l994:
  1254                           
  1255                           ;Lab08.c: 98:         PIR1bits.ADIF = 0;
  1256  011B  130C               	bcf	12,6	;volatile
  1257  011C                     i1l68:
  1258  011C  0875               	movf	??_isr+5,w
  1259  011D  00FF               	movwf	btemp+1
  1260  011E  0874               	movf	??_isr+4,w
  1261  011F  008A               	movwf	10
  1262  0120  0873               	movf	??_isr+3,w
  1263  0121  0084               	movwf	4
  1264  0122  0E72               	swapf	??_isr+2,w
  1265  0123  0083               	movwf	3
  1266  0124  0EFE               	swapf	btemp,f
  1267  0125  0E7E               	swapf	btemp,w
  1268  0126  0009               	retfie
  1269  0127                     __end_of_isr:
  1270  007E                     btemp	set	126	;btemp
  1271  007E                     wtemp0	set	126
  1272                           
  1273                           	psect	intentry
  1274  0004                     __pintentry:	
  1275                           ;incstack = 0
  1276                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath]
  1277                           
  1278  0004                     interrupt_function:
  1279  007E                     saved_w	set	btemp
  1280  0004  00FE               	movwf	btemp
  1281  0005  0E03               	swapf	3,w
  1282  0006  00F2               	movwf	??_isr+2
  1283  0007  0804               	movf	4,w
  1284  0008  00F3               	movwf	??_isr+3
  1285  0009  080A               	movf	10,w
  1286  000A  00F4               	movwf	??_isr+4
  1287  000B  1283               	bcf	3,5	;RP0=0, select bank0
  1288  000C  1303               	bcf	3,6	;RP1=0, select bank0
  1289  000D  087F               	movf	btemp+1,w
  1290  000E  00F5               	movwf	??_isr+5
  1291  000F  120A  118A  28BB   	ljmp	_isr
  1292                           
  1293                           	psect	config
  1294                           
  1295                           ;Config register CONFIG1 @ 0x2007
  1296                           ;	Oscillator Selection bits
  1297                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1298                           ;	Watchdog Timer Enable bit
  1299                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1300                           ;	Power-up Timer Enable bit
  1301                           ;	PWRTE = OFF, PWRT disabled
  1302                           ;	RE3/MCLR pin function select bit
  1303                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1304                           ;	Code Protection bit
  1305                           ;	CP = OFF, Program memory code protection is disabled
  1306                           ;	Data Code Protection bit
  1307                           ;	CPD = OFF, Data memory code protection is disabled
  1308                           ;	Brown Out Reset Selection bits
  1309                           ;	BOREN = OFF, BOR disabled
  1310                           ;	Internal External Switchover bit
  1311                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1312                           ;	Fail-Safe Clock Monitor Enabled bit
  1313                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1314                           ;	Low Voltage Programming Enable bit
  1315                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  1316                           ;	In-Circuit Debugger Mode bit
  1317                           ;	DEBUG = 0x1, unprogrammed default
  1318  2007                     	org	8199
  1319  2007  30D4               	dw	12500
  1320                           
  1321                           ;Config register CONFIG2 @ 0x2008
  1322                           ;	Brown-out Reset Selection bit
  1323                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1324                           ;	Flash Program Memory Self Write Enable bits
  1325                           ;	WRT = OFF, Write protection off
  1326  2008                     	org	8200
  1327  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    10
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       8
    BANK0            80     19      27
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___awdiv
    ___awdiv->___wmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    1280
                                             15 BANK0      4     4      0
                            ___awdiv
                             ___wmul
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     676
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     604
                                              6 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  6     6      0       0
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
     ___wmul (ARG)
   ___wmul
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      23       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     13      1B       5       33.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      23      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Apr 23 22:02:15 2021

                      pc 0002                       l73 002A                       l82 01D4  
           ___awdiv@sign 002C                       fsr 0004      ___wmul@multiplicand 0022  
                    l321 018F                      l170 01FB                      l168 01E3  
                    l910 0127                      l920 0139                      l912 012A  
                    l930 014D                      l922 013E                      l914 012E  
                    l940 0173                      l932 0154                      l924 0142  
                    l916 0133                      l950 018B                      l942 0174  
                    l934 0158                      l926 0144                      l918 0135  
                    l944 017B                      l936 015C                      l928 014A  
                    l938 016D                      l946 0181                      l948 0186  
                    u310 015C                      u311 015B                      u305 014E  
                    u330 016D                      u331 016C                      u500 00A4  
                    u325 015D                      u501 00A3                      u350 0181  
                    u270 012E                      u351 0180                      u335 0169  
                    u271 012D                      u360 0186                      u280 0139  
                    u361 0185                      u345 0175                      u281 0138  
                    u290 014A                      u450 01DD                      u291 0149  
                    u451 01DC                      u517 00B1                      u527 01C3  
                    u480 01F7                      u481 01F6                      u465 01E4  
                    u490 009B                      u475 01EB                      u491 009A  
                    _dec 0039                      _cen 0037                      _dig 0033  
                    _isr 00BB                      fsr0 0004                      _uni 0035  
                   l1010 0190                     l1020 01A5                     l1012 0194  
                   l1030 01AA                     l1022 01A6                     l1014 0195  
                   l1040 01B4                     l1032 01AB                     l1024 01A7  
                   l1016 01A1                     l1050 01C9                     l1042 01B5  
                   l1034 01AC                     l1026 01A8                     l1018 01A4  
                   l1060 01D2                     l1052 01CA                     l1044 01BB  
                   l1036 01B0                     l1028 01A9                     l1070 01EA  
                   l1062 01D3                     l1054 01CB                     l1046 01BF  
                   l1038 01B3                     l1072 01F1                     l1064 01D5  
                   l1056 01CC                     l1048 01C6                     l1080 0097  
                   l1074 01F7                     l1066 01D9                     l1058 01CF  
                   l1090 00B4                     l1082 009B                     l1068 01DD  
                   l1084 00A4                     l1086 00A9                     l1078 0025  
                   l1088 00AD                     ?_isr 0070                     _T0IF 005A  
                   i1l61 0104                     i1l68 011C                     _TMR0 0001  
                   _main 0025                     _segm 0076                     btemp 007E  
                   start 0012                    ??_isr 0070                    ?_main 0070  
        __end_of___awdiv 0190                    _ANSEL 0188          ___awdiv@divisor 0026  
                  i1l960 00C2                    i1l970 00D9                    i1l962 00C3  
                  i1l954 00BB                    i1l980 00F6                    i1l972 00DF  
                  i1l964 00C9                    i1l956 00BF                    i1l990 0111  
                  i1l982 00FF                    i1l974 00E8                    i1l966 00D2  
                  i1l958 00C0                    i1l992 0114                    i1l984 0101  
                  i1l976 00EA                    i1l968 00D4                    i1l994 011B  
                  i1l978 00EF                    i1l986 0104                    i1l988 0108  
        ___awdiv@counter 002B                    u40_20 00F6                    u40_21 00F5  
                  u41_20 0108                    u41_21 0107                    u42_20 0111  
                  u42_21 0110                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    u37_20 00BF                    u37_21 00BE  
                  u38_20 00C9                    u38_21 00C8                    u39_20 00DF  
                  u39_21 00DE                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089                    _tabla 0206  
                  _setup 0190                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 0015             __end_of_main 00BB  
                 ??_main 002F                   _ADRESH 001E         ___awdiv@dividend 0028  
                 ?_setup 0070                   _ANSELH 0189                   ___wmul 01D5  
              ??___awdiv 002A         ___awdiv@quotient 002D                   saved_w 007E  
__end_of__initialization 0021           __pcstackCOMMON 0070            __end_of_tabla 0210  
          __end_of_setup 01D5           _OPTION_REGbits 0081                  ??_setup 0020  
             __pbssBANK0 0033               __pmaintext 0025                  ?___wmul 0020  
             __pintentry 0004               __stringtab 0200                  ___awdiv 0127  
        __size_of___wmul 0027                  __ptext1 0190                  __ptext2 01D5  
                __ptext3 0127                  __ptext4 00BB             __size_of_isr 006C  
   end_of_initialization 0021           __end_of___wmul 01FC      start_initialization 0015  
            __end_of_isr 0127                 ??___wmul 0076              __pbssCOMMON 0076  
              ___latbits 0002            __pcstackBANK0 0020                 ?___awdiv 0026  
              __pstrings 0200           __size_of_setup 0045        interrupt_function 0004  
         ___wmul@product 0024                 _PIE1bits 008C                 _PIR1bits 000C  
             _ADCON0bits 001F              __stringbase 0205               _ADCON1bits 009F  
      ___wmul@multiplier 0020         __size_of___awdiv 0069       __end_of__stringtab 0206  
          __size_of_main 0096               _INTCONbits 000B                 intlevel1 0000  
              stringcode 0200               _OSCCONbits 008F                 stringdir 0200  
               stringtab 0200  
